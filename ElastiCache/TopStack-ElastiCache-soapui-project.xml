<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="TopStack ElastiCache (Main)" resourceRoot="" soapui-version="4.5.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Cache Cluster Test Suite"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="true"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting>
  </con:settings>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="ElastiCache" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
    </con:endpoints>
    <con:resource name="ElastiCache Actions" path="/ElastiCacheQuery/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>Action</con:name>
          <con:value/>
          <con:style>QUERY</con:style>
          <con:default/>
        </con:parameter>
        <con:parameter>
          <con:name>Version</con:name>
          <con:value>${#Project#Version}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#Version}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>SignatureMethod</con:name>
          <con:value>${#Project#SignatureMethod}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#SignatureMethod}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>TimeStamp</con:name>
          <con:value>${#Project#Timestamp}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#Timestamp}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>AWSAccessKeyId</con:name>
          <con:value>${#Project#AWSAccessKeyId}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#AWSAccessKeyId}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>SignatureVersion</con:name>
          <con:value>${#Project#SignatureVersion}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#SignatureVersion}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>Signature</con:name>
          <con:value>${#Project#Signature}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#Signature}</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="AuthorizeCacheSecurityGroupIngress" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>AuthorizeCacheSecurityGroupIngress</con:value>
            <con:style>QUERY</con:style>
            <con:default>AuthorizeCacheSecurityGroupIngress</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupOwnerId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Authorize Ingress to group 'transcend-topstack'" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="CacheSecurityGroupName" value="cachecluster-sg"/>
            <con:entry key="EC2SecurityGroupName" value="rds-29-testmsi-rdsinstance-3306"/>
            <con:entry key="EC2SecurityGroupOwnerId" value="29"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="CreateCacheCluster" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>CreateCacheCluster</con:value>
            <con:style>QUERY</con:style>
            <con:default>CreateCacheCluster</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>AutoMinorVersionUpgrade</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>CacheNodeType</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>CacheClusterId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupName</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>CacheSecurityGroupNames.member.1</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Engine</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EngineVersion</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>NotificationTopicArn</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>NumCacheNodes</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Port</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>PreferredAvailabilityZone</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>PreferredMaintenanceWindow</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Create Cache Cluster" mediaType="application/xml">
          <con:settings>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="CreateCacheParameterGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>CreateCacheParameterGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>CreateCacheParameterGroup</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupFamily</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Description</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:request name="Create Cache Parameter Group" mediaType="application/xml">
          <con:settings>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="CreateCacheSecurityGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>CreateCacheSecurityGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>CreateCacheSecurityGroup</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Description</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Create Cache Security Group" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="Description" value="Security group for testing"/>
            <con:entry key="CacheSecurityGroupName" value="cache-sgtest"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DeleteCacheCluster" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DeleteCacheCluster</con:value>
            <con:style>QUERY</con:style>
            <con:default>DeleteCacheCluster</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheClusterId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Delete Cache Cluster" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="CacheClusterId" value="cache-db-460209c2-9" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DeleteCacheParameterGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DeleteCacheParameterGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>DeleteCacheParameterGroup</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Delete Cache Param group" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="CacheParameterGroupName" value="cf-ecache-paramgrp" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DeleteCacheSecurityGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DeleteCacheSecurityGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>DeleteCacheSecurityGroup</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Delete Cache Cluster Security Group" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="CacheSecurityGroupName" value="default" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeCacheClusters" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeCacheClusters</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeCacheClusters</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheClusterId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>ShowCacheNodeInfo</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe all cache clusters" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="ShowCacheNodeInfo" value="true" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeCacheParameterGroups" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeCacheParameterGroups</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeCacheParameterGroups</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe Cache Param groups" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DescribeCacheParameters" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeCacheParameters</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeCacheParameters</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Source</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe Cache parameters" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="Source" value="user"/>
            <con:entry key="CacheParameterGroupName" value="cachecluster-pg"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeCacheSecurityGroups" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeCacheSecurityGroups</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeCacheSecurityGroups</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe cache Security Groups" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DescribeEngineDefaultParameters" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeEngineDefaultParameters</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeEngineDefaultParameters</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupFamily</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe Engine Default Parameters" mediaType="application/xml">
          <con:settings>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DescribeEvents" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>Duration</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter required="false" disableUrlEncoding="false">
            <con:name>StartTime</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>EndTime</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter required="false" disableUrlEncoding="false">
            <con:name>SourceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="false" disableUrlEncoding="false">
            <con:name>SourceType</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe Events" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="Action" value="DescribeEvents"/>
            <con:entry key="Duration" value="60"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="ModifyCacheCluster" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>ModifyCacheCluster</con:value>
            <con:style>QUERY</con:style>
            <con:default>ModifyCacheCluster</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>ApplyImmediately</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>AutoMinorVersionUpgrade</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>CacheClusterId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>CacheNodeIdsToRemove.member.N</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>CacheSecurityGroupNames.member.1</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>EngineVersion</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>NotificationTopicArn</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>NotificationTopicStatus</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>NumCacheNodes</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>PreferredMaintenanceWindow</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Modify Cache Cluster" mediaType="application/xml">
          <con:settings>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="ModifyCacheParameterGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>ModifyCacheParameterGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>ModifyCacheParameterGroup</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>ParameterNameValues.member.1.ParameterName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>ParameterNameValues.member.1.ParameterValue</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Modify Cache Param group" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="CacheParameterGroupName" value="cachecluster-pg"/>
            <con:entry key="ParameterNameValues.member.1.ParameterValue" value="50"/>
            <con:entry key="ParameterNameValues.member.1.ParameterName" value="chunk_size"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="RebootCacheCluster" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>RebootCacheCluster</con:value>
            <con:style>QUERY</con:style>
            <con:default>RebootCacheCluster</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheClusterId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>CacheNodeIdsToReboot.member.1</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Reboot cache cluster" mediaType="application/xml">
          <con:settings>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="ResetCacheParameterGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>ResetCacheParameterGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>ResetCacheParameterGroup</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>ParameterNameValues.member.1</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>ResetAllParameters</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:request name="Reset Cache parameter group" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="ResetAllParameters" value="true"/>
            <con:entry key="CacheParameterGroupName" value="cachecluster-pg"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="RevokeCacheSecurityGroupIngress" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>RevokeCacheSecurityGroupIngress</con:value>
            <con:style>QUERY</con:style>
            <con:default>RevokeCacheSecurityGroupIngress</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CacheSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupOwnerId</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:request name="Revoke Ingress" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="CacheSecurityGroupName" value="cachecluster-sg"/>
            <con:entry key="EC2SecurityGroupName" value="transcend-topstack"/>
            <con:entry key="EC2SecurityGroupOwnerId" value="4"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite name="Cache Parameters Test Suite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe Engine Default Parameters" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe Engine Default Parameters">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeEngineDefaultParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Engine Default Parameters" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is a DescribeEngineDefaultParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeEngineDefaultParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheParameterGroupFamily =memcached1.4">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheParameterGroupFamily</path>
                <content>memcached1.4</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheNodeSpecificParameters are detailed">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheNodeTypeSpecificParameters/ns1:CacheNodeTypeSpecificParameter)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Parameters are detailed">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:Parameters/ns1:Parameter)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupFamily" value="memcached1.4" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to Describe Engine Default Parameters with invalid parameters" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt describe without an engine">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeEngineDefaultParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt describe without an engine" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt describe with invalid engine">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeEngineDefaultParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt describe with invalid engine" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error cod eis InvalidParameterValue">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupFamily" value="invalid" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt CreateCacheParameterGroup with invalid parameters" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt creation without description">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt creation without description" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheParameterGroupName" value="invalid-cachepg"/>
              <con:entry key="CacheParameterGroupFamily" value="memcached1.4"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt creation without group family">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt creation without group family" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Unused"/>
              <con:entry key="CacheParameterGroupName" value="invalid-cachepg"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt creation without name">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt creation without name" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Unused"/>
              <con:entry key="CacheParameterGroupFamily" value="memcached1.4"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Create parameter group with invalid family">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create parameter group with invalid family" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is InvalidParameterValue">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Parameter group for testing"/>
              <con:entry key="CacheParameterGroupName" value="invalid-cachepg"/>
              <con:entry key="CacheParameterGroupFamily" value="invalid"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Cache Parameter Group" searchProperties="true" id="0ac3ac55-29fe-4e5b-bd68-7611a64deffd">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Parameter group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Parameter group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateCacheParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:CreateCacheParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheParameterGroupName=&quot;test-cachepg&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheParameterGroupName</path>
                <content>test-cachepg</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheParameterGroupFamily=&quot;memcached1.4&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheParameterGroupFamily</path>
                <content>memcached1.4</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Description node is correct">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Description</path>
                <content>Parameter group for testing</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Parameter group for testing"/>
              <con:entry key="CacheParameterGroupName" value="test-cachepg"/>
              <con:entry key="CacheParameterGroupFamily" value="memcached1.4"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Cache Param groups to check group was added">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Cache Param groups to check group was added" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="test-cachepg shows up in the database">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheParameterGroup[ns1:CacheParameterGroupName='test-cachepg'])</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to create already existing parameter group" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt to Create Parameter group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to Create Parameter group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is CacheParameterGroupAlreadyExists">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>CacheParameterGroupAlreadyExists</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Shouldn't be this"/>
              <con:entry key="CacheParameterGroupName" value="test-cachepg"/>
              <con:entry key="CacheParameterGroupFamily" value="memcached1.4"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe with specific group name to check description wasn't changed">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe with specific group name to check description wasn't changed" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheParameterGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="test-cachepg shows up in the database">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheParameterGroupName</path>
                <content>test-cachepg</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheParameterGroupFamily=&quot;memcached1.4&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheParameterGroupFamily</path>
                <content>memcached1.4</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Description is same as entered">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Description</path>
                <content>Parameter group for testing</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="test-cachepg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe Cache Parameter Group" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe all groups">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe all groups" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeCacheParameterGroup">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheParameterGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check for entries by checking for default group">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheParameterGroup[ns1:CacheParameterGroupName='default'])</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe with specific group name to check data">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe with specific group name to check data" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheParameterGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="test-cachepg shows up in the database">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheParameterGroupName</path>
                <content>test-cachepg</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheParameterGroupFamily=&quot;memcached1.4&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheParameterGroupFamily</path>
                <content>memcached1.4</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Description is same as entered">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Description</path>
                <content>Parameter group for testing</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="test-cachepg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt DescribeCacheParameterGroups with invalid parameters" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt Describe with non-existing group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt Describe with non-existing group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="default group shows up in the describe response">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>CacheParameterGroupNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="nonexistent" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to Modify Parameter group with invalid parameters" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt modify without parameter group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt modify without parameter group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="MissingParameter error is returned">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="ParameterNameValues.member.1.ParameterValue" value="1"/>
              <con:entry key="ParameterNameValues.member.1.ParameterName" value="cas_disabled"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt modify on nonexistent parameter group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt modify on nonexistent parameter group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="CacheParameterGroupNotFound error is returned">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>CacheParameterGroupNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheParameterGroupName" value="nonexistent"/>
              <con:entry key="ParameterNameValues.member.1.ParameterValue" value="1"/>
              <con:entry key="ParameterNameValues.member.1.ParameterName" value="cas_disabled"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt modify without parameter name">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt modify without parameter name" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="MissingParameter error is returned">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheParameterGroupName" value="test-cachepg"/>
              <con:entry key="ParameterNameValues.member.1.ParameterValue" value="1"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt modify without parameter value">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt modify without parameter value" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="MissingParameter error is returned">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheParameterGroupName" value="test-cachepg"/>
              <con:entry key="ParameterNameValues.member.1.ParameterName" value="cas_disabled"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt modify on non-modifiable parameter">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt modify on non-modifiable parameter" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Error is returned">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterCombination</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheParameterGroupName" value="test-cachepg"/>
              <con:entry key="ParameterNameValues.member.1.ParameterValue" value="1"/>
              <con:entry key="ParameterNameValues.member.1.ParameterName" value="large_memory_pages"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe Cache Parameters" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe Cache parameters">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Cache parameters" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="test-cachepg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe cache parameters using &quot;user&quot; source" disabled="true">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe cache parameters using &quot;user&quot; source" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
ns1:DescribeCacheParametersResponse/ns1:DescribeCacheParametersResult/data(ns1:Parameters)</path>
                <content/>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Source" value="user"/>
              <con:entry key="CacheParameterGroupName" value="test-cachepg"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify Parameter Group" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Modify parameter 'max_item_size'">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Modify parameter 'max_item_size'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is ModifyCacheParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:ModifyCacheParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheParameterGroupName=test-cachepg">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:ModifyCacheParameterGroupResult/ns1:CacheParameterGroupName</path>
                <content>test-cachepg</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheParameterGroupName" value="test-cachepg"/>
              <con:entry key="ParameterNameValues.member.1.ParameterValue" value="5000"/>
              <con:entry key="ParameterNameValues.member.1.ParameterName" value="max_item_size"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Cache parameters to check value of modified parameter">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Cache parameters to check value of modified parameter" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DescribeCacheParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="max_item_size source=user">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Parameter[ns1:ParameterName="max_item_size"]/ns1:Source</path>
                <content>user</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="max_item_size=5000">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Parameter[ns1:ParameterName="max_item_size"]/ns1:ParameterValue</path>
                <content>5000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="test-cachepg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reset Cache Parameter Group" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Reset Cache parameter group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ResetCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Reset Cache parameter group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is ResetCacheParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:ResetCacheParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="ResetAllParameters" value="true"/>
              <con:entry key="CacheParameterGroupName" value="test-cachepg"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Cache parameters to check value has been reset to default">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Cache parameters to check value has been reset to default" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DescribeCacheParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="max_item_size source=user">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Parameter[ns1:ParameterName="max_item_size"]/ns1:Source</path>
                <content>system</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="max_item_size=5000">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Parameter[ns1:ParameterName="max_item_size"]/ns1:ParameterValue</path>
                <content>1048576</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="test-cachepg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt Delete Cache Parameter Group with invalid parameters" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="DeleteCacheParameterGroup without group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DeleteCacheParameterGroup without group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteCacheParameterGroupResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is CacheParameterGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt deletion on nonexistant group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt deletion on nonexistant group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteCacheParameterGroupResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is CacheParameterGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>CacheParameterGroupNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="nonexistant" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Cache Parameter Group" searchProperties="true" id="00dac2bb-acc6-4f87-a5fc-f84cac995bf6">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete Cache Param group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Cache Param group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteCacheParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DeleteCacheParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="test-cachepg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Cache Param groups to check group was deleted">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Cache Param groups to check group was deleted" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="test-cachepg details are not present">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheParameterGroup[ns1:CacheParameterGroupName='test-cachepg'])</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Cache Security Group Test Suite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Cache Security Group" searchProperties="true" id="07ab2499-66cb-486b-b3d3-35e54b0c700a">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Cache Security Group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Cache Security Group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is CreateCacheSecurityGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:CreateCacheSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheSecurityGroupName node = test-cachesg">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheSecurityGroup/ns1:CacheSecurityGroupName</path>
                <content>test-cachesg</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Description node is correct">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheSecurityGroup/ns1:Description</path>
                <content>Security group for testing</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="OwnerId node exists">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheSecurityGroup/ns1:OwnerId)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Ec2SecurityGroups node exists">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheSecurityGroup/ns1:EC2SecurityGroups)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Security group for testing"/>
              <con:entry key="CacheSecurityGroupName" value="test-cachesg"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Check the security group is in the Database">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Check the security group is in the Database" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="test-cachesg has been created in the database">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheSecurityGroup[ns1:CacheSecurityGroupName="test-cachesg"])</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to create already existing security group" searchProperties="true" id="f5402ce2-327f-4fe5-b0c8-854ecc7c0024">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Cache Security Group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Cache Security Group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Error code = CacheSecurityGroupAlreadyExists">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>CacheSecurityGroupAlreadyExists</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Security group for testing"/>
              <con:entry key="CacheSecurityGroupName" value="test-cachesg"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe Cache Security Groups" searchProperties="true" id="728a27cf-c434-4185-9efd-485c383cba61">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe all groups">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe all groups" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DescribeCacheSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check for entries by checking for default group">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheSecurityGroup[ns1:CacheSecurityGroupName="default"])</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe specific group to check returned details">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe specific group to check returned details" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DescribeCacheSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check group returned is test-cachesg">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheSecurityGroup[ns1:CacheSecurityGroupName="test-cachesg"])</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check existence/correctness of description">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Description</path>
                <content>Security group for testing</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check existence of OwnerID">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:OwnerId)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check existence of Ec2SecurityGroups" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:OwnerId</path>
                <content>22</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheSecurityGroupName" value="test-cachesg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt Describe Cache Security Groups with invalid parameters" searchProperties="true" id="2dd0889a-28e0-488c-919a-0964751640a9">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt to describe groups with nonexistent security group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to describe groups with nonexistent security group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DescribeCacheSecurityGroupsResponse">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>CacheSecurityGroupNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheSecurityGroupName" value="nonexistent" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authorize Ingress" searchProperties="true" id="52f7821e-4a93-49a4-897a-f4cbd70ac79e">
      <con:settings/>
      <con:testStep type="restrequest" name="Authorize ingress with group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="AuthorizeCacheSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authorize ingress with group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is AuthorizeCacheSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:AuthorizeCacheSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheSecurityGroupName" value="test-cachesg"/>
              <con:entry key="EC2SecurityGroupName" value="${#Project#EC2SecurityGroupName}"/>
              <con:entry key="EC2SecurityGroupOwnerId" value="${#Project#EC2OwnerId}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe group to check Ingress was added">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe group to check Ingress was added" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DescribeCacheSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check existence of Ec2SecurityGroups">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:EC2SecurityGroups)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Group ingress for default group exists">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:EC2SecurityGroup[ns1:EC2SecurityGroupName='transcend-topstack'])</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheSecurityGroupName" value="test-cachesg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Revoke Ingress" searchProperties="true" id="0c18fb29-d949-458b-afba-506645867593">
      <con:settings/>
      <con:testStep type="restrequest" name="Revoke Ingress">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="RevokeCacheSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Revoke Ingress" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is RevokeCacheSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:RevokeCacheSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheSecurityGroupName" value="test-cachesg"/>
              <con:entry key="EC2SecurityGroupName" value="default"/>
              <con:entry key="EC2SecurityGroupOwnerId" value="${#Project#EC2OwnerId}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Security Group" searchProperties="true" id="46bb0ad2-41b1-4a40-b487-bcd0c4052ea4">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete Cache Cluster Security Group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Cache Cluster Security Group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DeleteCacheSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheSecurityGroupName" value="test-cachesg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Check the security group is no longer in the Database">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Check the security group is no longer in the Database" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="test-cachesg is no longer in the database">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheSecurityGroup[ns1:CacheSecurityGroupName="test-cachesg"])</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to delete nonexistent security group" searchProperties="true" id="a017f266-6800-4740-997f-887c1d4a43de">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt delete on nonexistent group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt delete on nonexistent group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Error is returned with code CacheSecurityGroupNotFount">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>CacheSecurityGroupNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheSecurityGroupName" value="nonexistent" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Cache Cluster Test Suite" disabled="true">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt Cache Cluster creation with invalid parameters" searchProperties="true" id="95422220-589d-4994-be7d-af4fc1f94ced">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Parameter group 'unused-pg'">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Parameter group 'unused-pg'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Parameter group for testing cache clusters"/>
              <con:entry key="CacheParameterGroupName" value="unused-pg"/>
              <con:entry key="CacheParameterGroupFamily" value="memcached1.4"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Create security group 'unused-sg'">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create security group 'unused-sg'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Security group for testing cache clusters"/>
              <con:entry key="CacheSecurityGroupName" value="unused-sg"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create with missing Engine">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create with missing Engine" mediaType="application/xml" accept="text/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Returns error MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="PreferredAvailabilityZone" value="msicluster2"/>
              <con:entry key="CacheSecurityGroupNames.member.1" value="unused-sg"/>
              <con:entry key="CacheClusterId" value="unused-cachecluster"/>
              <con:entry key="CacheParameterGroupName" value="unused-pg"/>
              <con:entry key="CacheNodeType" value="cache.m1.small"/>
              <con:entry key="AutoMinorVersionUpgrade" value="true"/>
              <con:entry key="PreferredMaintenanceWindow" value="sun:05:00-sun:09:00"/>
              <con:entry key="NumCacheNodes" value="1"/>
              <con:entry key="EngineVersion" value="1.4.5"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create with invalid Engine" disabled="true">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create with invalid Engine" mediaType="application/xml" accept="text/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Returns error MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="PreferredAvailabilityZone" value="msicluster2"/>
              <con:entry key="CacheSecurityGroupNames.member.1" value="unused-sg"/>
              <con:entry key="CacheClusterId" value="unused-cachecluster"/>
              <con:entry key="CacheParameterGroupName" value="unused-pg"/>
              <con:entry key="CacheNodeType" value="cache.m1.small"/>
              <con:entry key="AutoMinorVersionUpgrade" value="true"/>
              <con:entry key="NumCacheNodes" value="1"/>
              <con:entry key="PreferredMaintenanceWindow" value="sun:05:00-sun:09:00"/>
              <con:entry key="EngineVersion" value="1.4.5"/>
              <con:entry key="Engine" value="invalid"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create with non-existant security group" disabled="true">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create with non-existant security group" mediaType="application/xml" accept="text/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Returns error MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="PreferredAvailabilityZone" value="msicluster2"/>
              <con:entry key="CacheSecurityGroupNames.member.1" value="nonexistant-sg"/>
              <con:entry key="CacheClusterId" value="unused-cachecluster"/>
              <con:entry key="CacheParameterGroupName" value="unused-pg"/>
              <con:entry key="CacheNodeType" value="cache.m1.small"/>
              <con:entry key="AutoMinorVersionUpgrade" value="true"/>
              <con:entry key="NumCacheNodes" value="1"/>
              <con:entry key="PreferredMaintenanceWindow" value="sun:05:00-sun:09:00"/>
              <con:entry key="EngineVersion" value="1.4.5"/>
              <con:entry key="Engine" value="memcached"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create with missing security group" disabled="true">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create with missing security group" mediaType="application/xml" accept="text/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Returns error MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="PreferredAvailabilityZone" value="msicluster2"/>
              <con:entry key="CacheClusterId" value="unused-cachecluster"/>
              <con:entry key="CacheParameterGroupName" value="unused-pg"/>
              <con:entry key="CacheNodeType" value="cache.m1.small"/>
              <con:entry key="AutoMinorVersionUpgrade" value="true"/>
              <con:entry key="PreferredMaintenanceWindow" value="sun:05:00-sun:09:00"/>
              <con:entry key="NumCacheNodes" value="1"/>
              <con:entry key="EngineVersion" value="1.4.5"/>
              <con:entry key="Engine" value="memcached"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Copy of Delete Cache Cluster" disabled="true">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of Delete Cache Cluster" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DeleteCacheClustersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DeleteCacheClustersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheNodeStatus=deleting" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheNodes/ns1:CacheNode/ns1:CacheNodeStatus</path>
                <content>deleting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheClusterStatus=deleting" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheClusterStatus</path>
                <content>deleting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheClusterId" value="unused-cachecluster" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete security group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete security group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheSecurityGroupName" value="unused-sg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete Cache parameter group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Cache parameter group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="unused-pg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Necessary Groups" searchProperties="true" id="921e8c2d-83b4-4a46-b581-c99401626955">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Parameter group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Parameter group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Parameter group for testing cache clusters"/>
              <con:entry key="CacheParameterGroupName" value="cachecluster-pg"/>
              <con:entry key="CacheParameterGroupFamily" value="memcached1.4"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Create Cache Security Group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Cache Security Group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Security group for testing cache clusters"/>
              <con:entry key="CacheSecurityGroupName" value="cachecluster-sg"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Cache Cluster" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Cache Cluster">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Cache Cluster" mediaType="application/xml" accept="text/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is CreateCacheClusterResponse" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:CreateCacheClusterResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheClusterStatus=creating">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheClusterStatus</path>
                <content>creating</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="NumCacheNodes=1">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:NumCacheNodes</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Engine=memcached">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Engine</path>
                <content>memcached</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="EngineVersion=1.4.5">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:EngineVersion</path>
                <content>1.4.5</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="AutoMinorVersionUpgrade=true">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:AutoMinorVersionUpgrade</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheNodeType=cache.m1.small">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheNodeType</path>
                <content>cache.m1.small</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheSecurityGroupName=cachecluster-sg">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheSecurityGroup/ns1:CacheSecurityGroupName</path>
                <content>cachecluster-sg</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheSecurityGroup Status=active">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheSecurityGroup/ns1:Status</path>
                <content>active</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheClusterId=msi-cachecluster">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheClusterId</path>
                <content>msi-cachecluster</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="PreferredAvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="CacheSecurityGroupNames.member.1" value="cachecluster-sg"/>
              <con:entry key="CacheClusterId" value="msi-cachecluster"/>
              <con:entry key="CacheParameterGroupName" value="cachecluster-pg"/>
              <con:entry key="CacheNodeType" value="cache.m1.small"/>
              <con:entry key="AutoMinorVersionUpgrade" value="true"/>
              <con:entry key="PreferredMaintenanceWindow" value="sun:05:00-sun:09:00"/>
              <con:entry key="NumCacheNodes" value="1"/>
              <con:entry key="EngineVersion" value="1.4.5"/>
              <con:entry key="Engine" value="memcached"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check Cache Cluster status is set to available" searchProperties="true">
      <con:settings/>
      <con:testStep type="delay" name="Wait 3 minutes for cache cluster creation">
        <con:settings/>
        <con:config>
          <delay>180000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe cache cluster to check availability">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheClusters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe cache cluster to check availability" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheClustersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Cache Cluster status = available">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheClusterStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheClusterId" value="msi-cachecluster"/>
              <con:entry key="ShowCacheNodeInfo" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to create already existing cache cluster" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt duplicate creation">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt duplicate creation" mediaType="application/xml" accept="text/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Error=CacheClusterAlreadyExists">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>CacheClusterAlreadyExists</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="PreferredAvailabilityZone" value="msicluster2"/>
              <con:entry key="CacheSecurityGroupNames.member.1" value="cachecluster-sg"/>
              <con:entry key="CacheClusterId" value="msi-cachecluster"/>
              <con:entry key="CacheParameterGroupName" value="cachecluster-pg"/>
              <con:entry key="CacheNodeType" value="cache.m1.small"/>
              <con:entry key="AutoMinorVersionUpgrade" value="true"/>
              <con:entry key="PreferredMaintenanceWindow" value="sun:05:00-sun:09:00"/>
              <con:entry key="NumCacheNodes" value="1"/>
              <con:entry key="EngineVersion" value="1.4.5"/>
              <con:entry key="Engine" value="memcached"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe Cache Clusters" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe all cache clusters">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheClusters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe all cache clusters" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DescribeCacheClustersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheClustersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check that entries are returned by checking for msi-cachecluster">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheCluster[ns1:CacheClusterId='msi-cachecluster'])</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="ShowCacheNodeInfo" value="true" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe msi-cachecluster to check details returned are corret">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheClusters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe msi-cachecluster to check details returned are corret" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DescribeCacheClustersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheClustersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Top level nodes are correct">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DescribeCacheClustersResponse/ns1:DescribeCacheClustersResult/ns1:CacheClusters/ns1:CacheCluster)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Cache parameter group = cachecluster-pg">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheParameterGroup/ns1:CacheParameterGroupName</path>
                <content>cachecluster-pg</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Cache parameter group apply type=in-sync">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheParameterGroup/ns1:ParameterApplyStatus</path>
                <content>in-sync</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheClusterId=msi-cachecluster">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheClusterId</path>
                <content>msi-cachecluster</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheClusterStatus=available">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheClusterStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheNodeType=cache.m1.small">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheNodeType</path>
                <content>cache.m1.small</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Engine=memcached">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Engine</path>
                <content>memcached</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="EngineVersion=1.4.5">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:EngineVersion</path>
                <content>1.4.5</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="PendingModifiedValues node exists" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:PendingModifiedValues)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="PreferredAvailabiltyZone exists">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:PreferredAvailabilityZone)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheClusterCreateTime node exists">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheClusterCreateTime)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="PreferredMaintenanceWindow existance">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:PreferredMaintenanceWindow)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Cache security group = cachecluster-sg">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheSecurityGroups/ns1:CacheSecurityGroup/ns1:CacheSecurityGroupName</path>
                <content>cachecluster-sg</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Cache security group  status= active">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheSecurityGroups/ns1:CacheSecurityGroup/ns1:Status</path>
                <content>active</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheClusterId" value="msi-cachecluster"/>
              <con:entry key="ShowCacheNodeInfo" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authorize Ingress to security group attached to instance" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Authorize Ingress to group 'transcend-topstack'">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="AuthorizeCacheSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authorize Ingress to group 'transcend-topstack'" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is AuthorizeCacheSecurityGroupINgressResponse node">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:AuthorizeCacheSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="EC2 Security group ingress was added">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(//ns1:CacheSecurityGroup/ns1:EC2SecurityGroups/ns1:EC2SecurityGroup[ns1:EC2SecurityGroupName="transcend-topstack"])</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheSecurityGroupName" value="cachecluster-sg"/>
              <con:entry key="EC2SecurityGroupName" value="default"/>
              <con:entry key="EC2SecurityGroupOwnerId" value="${#Project#EC2OwnerId}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Revoke Security group ingress to attached sec. group" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Revoke Ingress">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="RevokeCacheSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Revoke Ingress" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is a RevokeCacheSecurityGroupIngress node">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:RevokeCacheSecurityGroupIngress)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheSecurityGroupName" value="cachecluster-sg"/>
              <con:entry key="EC2SecurityGroupName" value="transcend-topstack"/>
              <con:entry key="EC2SecurityGroupOwnerId" value="4"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify Cache Cluster" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Modify number of nodes">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Modify number of nodes" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheClusterId" value="msi-cachecluster"/>
              <con:entry key="ApplyImmediately" value="true"/>
              <con:entry key="AutoMinorVersionUpgrade" value="true"/>
              <con:entry key="NumCacheNodes" value="2"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Modify AutoMinorVersionUpgrade">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Modify AutoMinorVersionUpgrade" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheClusterId" value="msi-cachecluster"/>
              <con:entry key="ApplyImmediately" value="false"/>
              <con:entry key="AutoMinorVersionUpgrade" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Create security group to change to">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="CreateCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create security group to change to" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Description" value="Security group for testing cache clusters"/>
              <con:entry key="CacheSecurityGroupName" value="cachecluster2-sg"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Modify Security group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Modify Security group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheSecurityGroupNames.member.1" value="cachecluster2-sg"/>
              <con:entry key="CacheClusterId" value="msi-cachecluster"/>
              <con:entry key="ApplyImmediately" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reboot cache cluster" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Reboot">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="RebootCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Reboot" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is RebootCacheClustersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:RebootCacheClustersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheNodeStatus=rebooting" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheNodes/ns1:CacheNode/ns1:CacheNodeStatus</path>
                <content>rebooting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheClusterStatus=rebooting" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheCluster/ns1:CacheClusterStatus</path>
                <content>rebooting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheClusterId" value="msi-cachecluster"/>
              <con:entry key="CacheNodeIdsToReboot.member.1" value="1"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify Parameter Group Attached to Cache Cluster" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Modify chunk_size parameter in cachecluster-pg">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ModifyCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Modify chunk_size parameter in cachecluster-pg" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ModifyCacheParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:ModifyCacheParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheParameterGroupName=cachecluster-pg">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:ModifyCacheParameterGroupResult/ns1:CacheParameterGroupName</path>
                <content>cachecluster-pg</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CacheParameterGroupName" value="cachecluster-pg"/>
              <con:entry key="ParameterNameValues.member.1.ParameterValue" value="50"/>
              <con:entry key="ParameterNameValues.member.1.ParameterName" value="chunk_size"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Cache parameters">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Cache parameters" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="chunk_size=50 (the modified value)">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:Parameters/ns1:Parameter[ns1:ParameterName="chunk_size"]/ns1:ParameterValue</path>
                <content>50</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="cachecluster-pg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reset Cache Parameter Group attached to instance" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Reset cache parameter group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="ResetCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Reset cache parameter group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="ResetAllParameters" value="true"/>
              <con:entry key="CacheParameterGroupName" value="cachecluster-pg"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to delete cache security group attached to instance" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt security group deletion">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt security group deletion" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Returns an InvalidCacheSecurityGroupState error">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidCacheSecurityGroupState</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheSecurityGroupName" value="cachecluster-sg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to delete Cache parameter group while still attached" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt parameter group deletion">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt parameter group deletion" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Returns an InvalidCacheParameterGroupState error">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidCacheParameterGroupState</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="cachecluster-pg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Cache Cluster" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete Cache Cluster">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheCluster" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Cache Cluster" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DeleteCacheClustersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DeleteCacheClustersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheClusterStatus=deleting">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheClusterStatus</path>
                <content>deleting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CacheNodeStatus=deleting">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
//ns1:CacheNodes/ns1:CacheNode/ns1:CacheNodeStatus</path>
                <content>deleting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheClusterId" value="msi-cachecluster" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check Cache Cluster was deleted" searchProperties="true">
      <con:settings/>
      <con:testStep type="delay" name="Wait 1 minute for deletion">
        <con:settings/>
        <con:config>
          <delay>60000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe cache cluster to check it no longer exists">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DescribeCacheClusters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe cache cluster to check it no longer exists" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Returns error CacheClusterNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>CacheClusterNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheClusterId" value="msi-cachecluster" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Security group after cache cluster deletion" searchProperties="true" id="b5049d57-a4b4-46fd-90d3-be9757648581">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete Cache Cluster Security Group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Cache Cluster Security Group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DeleteCacheSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheSecurityGroupName" value="cachecluster-sg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete 2nd security group" disabled="true">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete 2nd security group" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DeleteCacheSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheSecurityGroupName" value="cachecluster2-sg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Cache parameter group after deletion of cache cluster" searchProperties="true" id="14201c37-de85-43db-9486-f2b5f4eaf917">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete Cache parameter group">
        <con:settings/>
        <con:config service="ElastiCache" resourcePath="/ElastiCacheQuery/" methodName="DeleteCacheParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Cache parameter group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteCacheParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://elasticache.amazonaws.com/doc/2012-03-09/';
exists(ns1:DeleteCacheParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="CacheParameterGroupName" value="cachecluster-pg" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:properties>
    <con:property>
      <con:name>Suffix</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>EC2OwnerId</con:name>
      <con:value>be344db2784445da9415d19c2bb31ac1</con:value>
    </con:property>
    <con:property>
      <con:name>ServiceEndpoint</con:name>
      <con:value>http://172.31.255.14:8080</con:value>
    </con:property>
    <con:property>
      <con:name>AvailabilityZone</con:name>
      <con:value>nova</con:value>
    </con:property>
    <con:property>
      <con:name>AWSAccessKeyId</con:name>
      <con:value>asaenz</con:value>
    </con:property>
    <con:property>
      <con:name>Version</con:name>
      <con:value>2009-02-01</con:value>
    </con:property>
    <con:property>
      <con:name>SignatureMethod</con:name>
      <con:value>HmacSHA256</con:value>
    </con:property>
    <con:property>
      <con:name>Expires</con:name>
      <con:value>2009-04-18T22:52:43PST</con:value>
    </con:property>
    <con:property>
      <con:name>SignatureVersion</con:name>
      <con:value>2</con:value>
    </con:property>
    <con:property>
      <con:name>Signature</con:name>
      <con:value>asdfjjef2oiboEXAMPLE</con:value>
    </con:property>
    <con:property>
      <con:name>EC2SecurityGroupName</con:name>
      <con:value>transcend-topstack</con:value>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:sensitiveInformation/>
</con:soapui-project>