<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="TopStack RDS (Main)" resourceRoot="" soapui-version="4.5.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="DB Security Group Test Suite"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="true"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="true"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="Clear groups in case any test failed"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting>
  </con:settings>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="TopStack RDS" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
    </con:endpoints>
    <con:resource name="RDS Actions" path="/RDSQuery/">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>Action</con:name>
          <con:value/>
          <con:style>QUERY</con:style>
          <con:default/>
        </con:parameter>
        <con:parameter>
          <con:name>Version</con:name>
          <con:value>${#Project#Version}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#Version}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>SignatureMethod</con:name>
          <con:value>${#Project#SignatureMethod}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#SignatureMethod}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>Timestamp</con:name>
          <con:value>${#Project#Timestamp}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#Timestamp}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>AWSAccessKeyId</con:name>
          <con:value>${#Project#AWSAccessKeyId}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#AWSAccessKeyId}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>SignatureVersion</con:name>
          <con:value>${#Project#SignatureVersion}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#SignatureVersion}</con:default>
        </con:parameter>
        <con:parameter>
          <con:name>Signature</con:name>
          <con:value>${#Project#Signature}</con:value>
          <con:style>QUERY</con:style>
          <con:default>${#Project#Signature}</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="CreateDBInstance" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>CreateDBInstance</con:value>
            <con:style>QUERY</con:style>
            <con:default>CreateDBInstance</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>AllocatedStorage</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>AutoMinorVersionUpgrade</con:name>
            <con:value>true</con:value>
            <con:style>QUERY</con:style>
            <con:default>true</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>AvailabilityZone</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>BackupRetentionPeriod</con:name>
            <con:value>1</con:value>
            <con:style>QUERY</con:style>
            <con:default>1</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CharacterSetName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DBInstanceClass</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DBInstanceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter required="false" disableUrlEncoding="false">
            <con:name>DBName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DBSecurityGroups.member.1</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>DBSubnetGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Engine</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EngineVersion</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>LicenceModel</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MasterUserPassword</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MasterUsername</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MultiAZ</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>OptionGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Port</con:name>
            <con:value>3306</con:value>
            <con:style>QUERY</con:style>
            <con:default>3306</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>PreferredBackupWindow</con:name>
            <con:value>05:00-05:30</con:value>
            <con:style>QUERY</con:style>
            <con:default>05:00-05:30</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>PreferredMaintenanceWindow</con:name>
            <con:value>Sun:05:30-Sun:06:00</con:value>
            <con:style>QUERY</con:style>
            <con:default>Sun:05:30-Sun:06:00</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Create Request" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="DBInstanceIdentifier" value="transcend-dbinstance"/>
            <con:entry key="DBInstanceClass" value="db.m1.small"/>
            <con:entry key="AllocatedStorage" value="5"/>
            <con:entry key="Expires" value="${#Project#Timestamp}"/>
            <con:entry key="DBSecurityGroups.member.1" value="rds-securitygroup1"/>
            <con:entry key="AutoMinorVersionUpgrade" value="false"/>
            <con:entry key="AvailabilityZone" value="essex-nova"/>
            <con:entry key="DBParameterGroupName" value="rds-dbparamgroup1"/>
            <con:entry key="Engine" value="MySQL"/>
            <con:entry key="MasterUserPassword" value="transcend"/>
            <con:entry key="MasterUsername" value="transcend"/>
            <con:entry key="MultiAZ" value="false"/>
            <con:entry key="LicenceModel" value="general-public-license"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DeleteDBInstance" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBInstanceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>FinalDBSnapshotIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>SkipFinalSnapshot</con:name>
            <con:value>false</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>false</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DeleteDBInstance</con:value>
            <con:style>QUERY</con:style>
            <con:default>DeleteDBInstance</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Delete Instance" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="DBInstanceIdentifier" value="zubzub"/>
            <con:entry key="SkipFinalSnapshot" value="true"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="ModifyDBParameterGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>ModifyDBParameterGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>ModifyDBParameterGroup</con:default>
          </con:parameter>
          <con:parameter required="false" disableUrlEncoding="false">
            <con:name>Parameters.member.1.ParameterName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Parameters.member.1.ParameterValue</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Parameters.member.1.ApplyMethod</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Parameters.member.2.ParameterValue</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Parameters.member.2.ParameterName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Parameters.member.2.ApplyMethod</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:request name="Modify parameter group" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="Parameters.member.1.ParameterValue" value="15000"/>
            <con:entry key="Parameters.member.1.ApplyMethod" value="immediate"/>
            <con:entry key="Parameters.member.1.ParameterName" value="binlog_cache_size"/>
            <con:entry key="DBParameterGroupName" value="testparamgroup"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="RestoreDBInstanceFromDBSnapshot" method="GET">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>AutoMinorVersionUpgrade</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>AvailabilityZone</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBInstanceClass</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBInstanceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBSnapshotIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBSubnetGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Engine</con:name>
            <con:value>MySQL</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>MySQL</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>LicenseModel</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MultiAZ</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>OptionGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Port</con:name>
            <con:value>3306</con:value>
            <con:style>QUERY</con:style>
            <con:default>3306</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>RestoreDBInstanceFromDBSnapshot</con:value>
            <con:style>QUERY</con:style>
            <con:default>RestoreDBInstanceFromDBSnapshot</con:default>
          </con:parameter>
        </con:parameters>
      </con:method>
      <con:method name="CreateDBSnapshot" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBInstanceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBSnapshotIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>CreateDBSnapshot</con:value>
            <con:style>QUERY</con:style>
            <con:default>CreateDBSnapshot</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Create Snapshot" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="DBInstanceIdentifier" value="asaenz-rdsinstance"/>
            <con:entry key="DBSnapshotIdentifier" value="clone2-adan-securitygroup"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeDBEngineVersions" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBParameterGroupFamily</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DefaultOnly</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Engine</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EngineVersion</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>ListSupportedCharacterSets</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value>100</con:value>
            <con:style>QUERY</con:style>
            <con:default>100</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeDBEngineVersions</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeDBEngineVersions</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe Engine Versions" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="Engine" value="mysql" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeDBParameterGroups" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value>100</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>100</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeDBParameterGroups</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeDBParameterGroups</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe DB Parameter Groups" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="MaxRecords" value="100" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DeleteDBSnapshot" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBSnapshotIdentifier</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DeleteDBSnapshot</con:value>
            <con:style>QUERY</con:style>
            <con:default>DeleteDBSnapshot</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Delete Snapshot" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="DBSnapshotIdentifier" value="clone2-adan-securitygroup" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeDBInstances" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBInstanceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value>100</con:value>
            <con:style>QUERY</con:style>
            <con:default>100</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeDBInstances</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeDBInstances</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe INstances" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DescribeEvents" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Duration</con:name>
            <con:value>60</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>60</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>EndTime</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value>100</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>100</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>SourceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>SourceType</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>StartTime</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeEvents</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeEvents</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe Events" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="SourceType" value="db-instance" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="CreateDBParameterGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBParameterGroupFamily</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Description</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>CreateDBParameterGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>CreateDBParameterGroup</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Create Parameter Group" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
            <con:entry key="Description" value="A parameter group for RDS services."/>
            <con:entry key="DBParameterGroupName" value="rds-dbparamgroup1"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="AuthorizeDBSecurityGroupIngress" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>CIDRIP</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupOwnerId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>AuthorizeDBSecurityGroupIngress</con:value>
            <con:style>QUERY</con:style>
            <con:default>AuthorizeDBSecurityGroupIngress</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Add ingress" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="CIDRIP" value="0.0.0.0/0"/>
            <con:entry key="DBSecurityGroupName" value="adan-securitygroup"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="CreateDBSecurityGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBSecurityGroupDescription</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DBSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2VpcId</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>CreateDBSecurityGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>CreateDBSecurityGroup</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Create Security Group" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="DBSecurityGroupName" value="rds-securitygroup1"/>
            <con:entry key="DBSecurityGroupDescription" value="A security group used for RDS services."/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DeleteDBSecurityGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DeleteDBSecurityGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>DeleteDBSecurityGroup</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Delete" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="DBSecurityGroupName" value="rds2-securitygroup" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeDBSecurityGroups" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value>100</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>100</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeDBSecurityGroups</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeDBSecurityGroups</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe Security groups" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="RevokeDBSecurityGroupIngress" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>CIDRIP</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBSecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>EC2SecurityGroupOwnerId</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>RevokeDBSecurityGroupIngress</con:value>
            <con:style>QUERY</con:style>
            <con:default>RevokeDBSecurityGroupIngress</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Revoke Ingress" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="CIDRIP" value="0.0.0.0/0"/>
            <con:entry key="DBSecurityGroupName" value="adan-securitygroup"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="RebootDBInstance" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBInstanceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>ForceFailover</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>RebootDBInstance</con:value>
            <con:style>QUERY</con:style>
            <con:default>RebootDBInstance</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Reboot Instance" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="DBInstanceIdentifier" value="asaenz-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeDBSnapshots" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBInstanceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBSnapshotIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value>100</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>100</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>SnapshotType</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeDBSnapshots</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeDBSnapshots</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe Snapshots" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="ResetDBParameterGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>ResetAllParameters</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Parameters.member.1.ParameterName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Parameters.member.1.ApplyMethod</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:request name="Reset Parameter Group" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="ResetAllParameters" value="true"/>
            <con:entry key="Action" value="ResetDBParameterGroup"/>
            <con:entry key="DBParameterGroupName" value="asaenz-paramgroup"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DeleteDBParameterGroup" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DeleteDBParameterGroup</con:value>
            <con:style>QUERY</con:style>
            <con:default>DeleteDBParameterGroup</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Delete 'test-paramgroup'" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="DBParameterGroupName" value="tesgrp" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeDBParameters" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value>100</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>100</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Source</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Describe DB Parameters" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="Action" value="DescribeDBParameters"/>
            <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="CreateDBInstanceReadReplica" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>AutoMinorVersionUpgrade</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>AvailabilityZone</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DBInstanceClass</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DBInstanceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>OptionGroupname</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Port</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>SourceDBInstanceIdentifier</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:request name="Request 1" mediaType="application/xml">
          <con:settings>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="Action" value="CreateDBInstanceReadReplica" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeEngineDefaultParameters" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>DBParameterGroupFamily</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value>100</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>100</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Request 1" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
            <con:entry key="Action" value="DescribeEngineDefaultParameters"/>
            <con:entry key="Marker" value="100"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeOrderableDBInstanceOptions" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>DescribeOrderableDBInstanceOptions</con:value>
            <con:style>QUERY</con:style>
            <con:default>DescribeOrderableDBInstanceOptions</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>DBInstanceClass</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Engine</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EngineVersion</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>LicenseModel</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Marker</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MaxRecords</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Request 1" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="ModifyDBInstance" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value>ModifyDBInstance</con:value>
            <con:style>QUERY</con:style>
            <con:default>ModifyDBInstance</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>AllocatedStorage</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>AutoMinorVersionUpgrade</con:name>
            <con:value>true</con:value>
            <con:style>QUERY</con:style>
            <con:default>true</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>AvailabilityZone</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>BackupRetentionPeriod</con:name>
            <con:value>1</con:value>
            <con:style>QUERY</con:style>
            <con:default>1</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>CharacterSetName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DBInstanceClass</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DBInstanceIdentifier</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter required="false" disableUrlEncoding="false">
            <con:name>DBName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>DBParameterGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>DBSecurityGroups.member.1</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>DBSubnetGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Engine</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>EngineVersion</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>LicenceModel</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MasterUserPassword</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MasterUsername</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>MultiAZ</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>OptionGroupName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Port</con:name>
            <con:value>3306</con:value>
            <con:style>QUERY</con:style>
            <con:default>3306</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>PreferredBackupWindow</con:name>
            <con:value>05:00-05:30</con:value>
            <con:style>QUERY</con:style>
            <con:default>05:00-05:30</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>PreferredMaintenanceWindow</con:name>
            <con:value>Sun:05:30-Sun:06:00</con:value>
            <con:style>QUERY</con:style>
            <con:default>Sun:05:30-Sun:06:00</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Modify Request" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="DBInstanceIdentifier" value="transcend-dbinstance"/>
            <con:entry key="DBInstanceClass" value="db.m1.small"/>
            <con:entry key="AllocatedStorage" value="5"/>
            <con:entry key="Expires" value="${#Project#Timestamp}"/>
            <con:entry key="DBSecurityGroups.member.1" value="rds-securitygroup1"/>
            <con:entry key="AutoMinorVersionUpgrade" value="false"/>
            <con:entry key="AvailabilityZone" value="essex-nova"/>
            <con:entry key="DBParameterGroupName" value="rds-dbparamgroup1"/>
            <con:entry key="Engine" value="MySQL"/>
            <con:entry key="MasterUserPassword" value="transcend"/>
            <con:entry key="MasterUsername" value="transcend"/>
            <con:entry key="MultiAZ" value="false"/>
            <con:entry key="LicenceModel" value="general-public-license"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DescribeReservedDBInstances" method="GET">
        <con:settings>
          <con:setting id="RecordResponseRepresentations">false</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>Action</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Request 1" mediaType="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            <con:setting id="RecordRequestRepresentations">false</con:setting>
          </con:settings>
          <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="Action" value="DescribeReservedDBInstances" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite name="Describe DB Engine Versions Test Suite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check Details Returned from Simple Call" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Make call with default parameters">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Make call with default parameters" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Validate Correct Response Type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBEngineVersionsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Validate all engines are returned">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBEngineVersion
return $x
}
&lt;/Result></path>
                <content><![CDATA[<Result>
  <DBEngineVersion xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
    <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
    <Engine>mysql</Engine>
    <EngineVersion>5.5</EngineVersion>
  </DBEngineVersion>
</Result>]]></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Engine given existing value" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Engine = 'MySQL'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Engine = 'MySQL'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Validate Correct Response Type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBEngineVersionsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Validate Only MySQL Engines returned">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:Engine
return $x
}
&lt;/Result></path>
                <content>&lt;Result>
  &lt;Engine xmlns="http://rds.amazonaws.com/admin/2011-04-01/">mysql&lt;/Engine>
&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="Engine" value="mysql" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Engine given non-existant value" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Engine='nonexistant'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Engine='nonexistant'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct Error code">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InternalFailure</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="Engine" value="nonexistant" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Version given existing value" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Version = '5.5'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Version = '5.5'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBEngineVersionsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Only returns Engine with versions 5.5">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:EngineVersion
return $x
}
&lt;/Result></path>
                <content>&lt;Result>
  &lt;EngineVersion xmlns="http://rds.amazonaws.com/admin/2011-04-01/">5.5&lt;/EngineVersion>
&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="EngineVersion" value="5.5" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Version given non-existant value" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Version = '1.1.1'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Version = '1.1.1'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct Error code">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InternalFailure</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="EngineVersion" value="1.1.1" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DBParameterGroupFamily with existing value" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="DBParameterGroupFamily=mysql5.5">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DBParameterGroupFamily=mysql5.5" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBEngineVersionsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Only returns Engines with correct DBParameterGroupFamily">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBParameterGroupFamily
return $x
}
&lt;/Result></path>
                <content>&lt;Result>
  &lt;DBParameterGroupFamily xmlns="http://rds.amazonaws.com/admin/2011-04-01/">mysql5.5&lt;/DBParameterGroupFamily>
&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupFamily" value="mysql5.5" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DBParameterGroupFamily with invalid/non-existing name" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="DBParameterGroupFamily='nonexistant'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DBParameterGroupFamily='nonexistant'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct Error code">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupFamily" value="nonexistant" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DBParameterGroupFamily='1invalid'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DBParameterGroupFamily='1invalid'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct Error code">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupFamily" value="1invalid" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DBParameterGroupFamily='invalid-'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DBParameterGroupFamily='invalid-'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct Error code">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupFamily" value="invalid-" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DBParameterGroupFamily='in--valid'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DBParameterGroupFamily='in--valid'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct Error code">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupFamily" value="in--valid" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Default Versions Only" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="DefaultOnly=true">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DefaultOnly=true" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBEngineVersionsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Only Return Engine with default Version">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBEngineVersion
return $x
}
&lt;/Result></path>
                <content><![CDATA[<Result>
  <DBEngineVersion xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
    <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
    <Engine>mysql</Engine>
    <EngineVersion>5.5</EngineVersion>
  </DBEngineVersion>
</Result>]]></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DefaultOnly" value="true" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MaxRecords given invalid values" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="MaxRecords &lt; 5">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="MaxRecords &lt; 5" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct Error code">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InternalFailure</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="MaxRecords" value="4" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="MaxRecords > 100">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBEngineVersions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="MaxRecords > 100" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Proper Response Type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct Error code">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InternalFailure</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="MaxRecords" value="101" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="DB Parameter Tests">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe Engine Default Parameters (issue with Marker?)" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Simple call to DescribeEngineDefaultParameters">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEngineDefaultParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Simple call to DescribeEngineDefaultParameters" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEngineDefaultParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEngineDefaultParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Response contains 100 parameters (MaxRecords=100)">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
let $x := //ns1:Parameter
return count($x)
}
&lt;/Result></path>
                <content>&lt;Result>100&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="Action" value="DescribeEngineDefaultParameters"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Another call to DescribeEngineDefaultParameters (to see rest of parameters)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEngineDefaultParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Another call to DescribeEngineDefaultParameters (to see rest of parameters)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEngineDefaultParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEngineDefaultParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Response contains 90 parameters (rest of parameters not shown in first call)">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
let $x := //ns1:Parameter
return count($x)
}
&lt;/Result></path>
                <content>&lt;Result>90&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="Action" value="DescribeEngineDefaultParameters"/>
              <con:entry key="Marker" value="100"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Give DescribeEngineDefaultParameters invalid parameters" searchProperties="true" id="59c8446d-1b76-4ba0-99f1-e997bbf59828">
      <con:settings/>
      <con:testStep type="restrequest" name="MaxRecords =15 (invalid because &lt;20)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEngineDefaultParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="MaxRecords =15 (invalid because &lt;20)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is InvalidParameterValue">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="MaxRecords" value="15"/>
              <con:entry key="Action" value="DescribeEngineDefaultParameters"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="MaxRecords =150 (invalid because >100)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEngineDefaultParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="MaxRecords =150 (invalid because >100)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is InvalidParameterValue">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="MaxRecords" value="150"/>
              <con:entry key="Action" value="DescribeEngineDefaultParameters"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DBParameterGroupFamily = &quot;invalid&quot;">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEngineDefaultParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DBParameterGroupFamily = &quot;invalid&quot;" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is DBParameterGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBParameterGroupNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="nonexistant"/>
              <con:entry key="MaxRecords" value=""/>
              <con:entry key="Action" value="DescribeEngineDefaultParameters"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DBParameterGroupFamily is empty">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEngineDefaultParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DBParameterGroupFamily is empty" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is DBParameterGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="Action" value="DescribeEngineDefaultParameters" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Simple Create/Delete/Describe new Parameter Group" searchProperties="true" id="91dd948e-714f-41b3-bca3-4f7ac8c426f0">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Parameter Group with name 'test-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Parameter Group with name 'test-paramgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct Response Type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format for test-paramgroup">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBParameterGroupResponse</path>
                <content><![CDATA[<CreateDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBParameterGroupResult>
    <DBParameterGroup>
      <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
      <DBParameterGroupName>test-paramgroup</DBParameterGroupName>
      <Description>A parameter group used for testing.</Description>
    </DBParameterGroup>
  </CreateDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="Description" value="A parameter group used for testing."/>
              <con:entry key="DBParameterGroupName" value="test-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe to check group was added">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe to check group was added" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParameterGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" name="Contains entry for 'test-paramgroup'">
              <con:configuration>
                <token><![CDATA[<DBParameterGroup>
            <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
            <DBParameterGroupName>test-paramgroup</DBParameterGroupName>
            <Description>A parameter group used for testing.</Description>
         </DBParameterGroup>]]></token>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="MaxRecords" value="100" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe with specific name to check group was added">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe with specific name to check group was added" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParameterGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DescribeDBParameterGroupsResponse</path>
                <content><![CDATA[<DescribeDBParameterGroupsResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <DescribeDBParameterGroupsResult>
    <DBParameterGroups>
      <DBParameterGroup>
        <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
        <DBParameterGroupName>test-paramgroup</DBParameterGroupName>
        <Description>A parameter group used for testing.</Description>
      </DBParameterGroup>
    </DBParameterGroups>
  </DescribeDBParameterGroupsResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DescribeDBParameterGroupsResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="MaxRecords" value="100"/>
              <con:entry key="DBParameterGroupName" value="test-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete 'test-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete 'test-paramgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBParameterGroupResponse</path>
                <content><![CDATA[<DeleteDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupName" value="test-paramgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe to check group was deleted">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe to check group was deleted" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParameterGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple NotContains" name="Doesn't have entry for test-paramgroup">
              <con:configuration>
                <token><![CDATA[<DBParameterGroup>
            <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
            <DBParameterGroupName>test-paramgroup</DBParameterGroupName>
            <Description>A parameter group used for testing.</Description>
         </DBParameterGroup>]]></token>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="MaxRecords" value="100" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to Create Duplicate Parameter Group" searchProperties="true" id="ee452804-bb8e-43fa-a92b-c4d0802434db">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Parameter group 'duplicate-group'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Parameter group 'duplicate-group'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct Response Type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct Data/Format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBParameterGroupResponse</path>
                <content><![CDATA[<CreateDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBParameterGroupResult>
    <DBParameterGroup>
      <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
      <DBParameterGroupName>duplicate-group</DBParameterGroupName>
      <Description>A parameter group used for testing.</Description>
    </DBParameterGroup>
  </CreateDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="Description" value="A parameter group used for testing."/>
              <con:entry key="DBParameterGroupName" value="duplicate-group"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Check group was added">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Check group was added" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParameterGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" name="Contains entry for 'duplicate-paramgroup'">
              <con:configuration>
                <token><![CDATA[<DBParameterGroup>
            <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
            <DBParameterGroupName>duplicate-group</DBParameterGroupName>
            <Description>A parameter group used for testing.</Description>
         </DBParameterGroup>]]></token>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="MaxRecords" value="100" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create 'duplicate-group' again.">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create 'duplicate-group' again." mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct Response Type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct Error code">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBParameterGroupAlreadyExists</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="Description" value="A parameter group used for testing."/>
              <con:entry key="DBParameterGroupName" value="duplicate-group"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete 'duplicate-group'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete 'duplicate-group'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBParameterGroupResponse</path>
                <content><![CDATA[<DeleteDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupName" value="duplicate-group" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to delete nonexistant group" searchProperties="true" id="df2bbb8e-c499-4434-a9c7-08f9064f4d53">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete 'test-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete 'test-paramgroup'" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is DBParameterGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBParameterGroupNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupName" value="nonexistant" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to describe non-existant group" searchProperties="true" id="65949dad-175c-482a-b210-46480ed27301">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe 'nonexistant'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameterGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe 'nonexistant'" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Is an ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is DBParameterGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBParameterGroupNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="MaxRecords" value="100"/>
              <con:entry key="DBParameterGroupName" value="nonexistant"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to create Parameter group with nonexistant group family" searchProperties="true" id="d931bcff-4465-427c-aeab-fed1c9bd32d5">
      <con:settings/>
      <con:testStep type="restrequest" name="Create test-paramgroup with family 'nonexistant'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create test-paramgroup with family 'nonexistant'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Is an Error Response">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is InvalidParameterValue">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="nonexistant"/>
              <con:entry key="Description" value="A parameter group used for testing."/>
              <con:entry key="DBParameterGroupName" value="testparamgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify/Reset Parameter Group" searchProperties="true" id="99d62673-6425-4545-bd10-73cd3a433e64">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Parameter Group with name 'modify-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Parameter Group with name 'modify-paramgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct Response Type" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format for modify-paramgroup" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBParameterGroupResponse</path>
                <content><![CDATA[<CreateDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBParameterGroupResult>
    <DBParameterGroup>
      <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
      <DBParameterGroupName>modify-paramgroup</DBParameterGroupName>
      <Description>A parameter group used to test modifying parameters.</Description>
    </DBParameterGroup>
  </CreateDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="Description" value="A parameter group used to test modifying parameters."/>
              <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Modify parameter group">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="ModifyDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Modify parameter group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is correct type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:ModifyDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:ModifyDBParameterGroupResponse</path>
                <content><![CDATA[<ModifyDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ModifyDBParameterGroupResult>
    <DBParameterGroupName>modify-paramgroup</DBParameterGroupName>
  </ModifyDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</ModifyDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Parameters.member.1.ParameterValue" value="20000"/>
              <con:entry key="Parameters.member.1.ApplyMethod" value="immediate"/>
              <con:entry key="Parameters.member.1.ParameterName" value="binlog_cache_size"/>
              <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe DB Parameters to check value of binlog_cache_size">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe DB Parameters to check value of binlog_cache_size" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for binlog_cache_size has correct value">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Value>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="binlog_cache_size"
return $x/data(ns1:ParameterValue)
}
&lt;/Value></path>
                <content>&lt;Value>20000&lt;/Value></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for binlog_cache_size no longer has source &quot;engine-default&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Source>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="binlog_cache_size"
return $x/data(ns1:Source)
}
&lt;/Source></path>
                <content>&lt;Source>user&lt;/Source></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Action" value="DescribeDBParameters"/>
              <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Modify multiple parameters at once">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="ModifyDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Modify multiple parameters at once" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is correct type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:ModifyDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:ModifyDBParameterGroupResponse</path>
                <content><![CDATA[<ModifyDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ModifyDBParameterGroupResult>
    <DBParameterGroupName>modify-paramgroup</DBParameterGroupName>
  </ModifyDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</ModifyDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Parameters.member.1.ParameterValue" value="15000"/>
              <con:entry key="Parameters.member.1.ApplyMethod" value="immediate"/>
              <con:entry key="Parameters.member.2.ParameterValue" value="1000"/>
              <con:entry key="Parameters.member.1.ParameterName" value="binlog_cache_size"/>
              <con:entry key="Parameters.member.2.ParameterName" value="ft_query_expansion_limit"/>
              <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
              <con:entry key="Parameters.member.2.ApplyMethod" value="pending-reboot"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe DB Parameters to check values of both parameters (using user source parameter)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe DB Parameters to check values of both parameters (using user source parameter)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DescribeDBParametersResult</path>
                <content><![CDATA[<DescribeDBParametersResult xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <Parameters>
    <Parameter>
      <AllowedValues>4096-9223372036854775807</AllowedValues>
      <ApplyType>dynamic</ApplyType>
      <DataType>integer</DataType>
      <Description>The size of the cache to hold the SQL statements for the binary log during a transaction.</Description>
      <IsModifiable>true</IsModifiable>
      <ParameterName>binlog_cache_size</ParameterName>
      <ParameterValue>15000</ParameterValue>
      <Source>user</Source>
    </Parameter>
    <Parameter>
      <AllowedValues>0-1000</AllowedValues>
      <ApplyType>static</ApplyType>
      <DataType>integer</DataType>
      <Description>Number of top matches to use for full-text searches performed using WITH QUERY EXPANSION.</Description>
      <IsModifiable>true</IsModifiable>
      <ParameterName>ft_query_expansion_limit</ParameterName>
      <ParameterValue>1000</ParameterValue>
      <Source>user</Source>
    </Parameter>
  </Parameters>
</DescribeDBParametersResult>]]></content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Source" value="user"/>
              <con:entry key="Action" value="DescribeDBParameters"/>
              <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Reset single parameter">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="ResetDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Reset single parameter" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:ResetDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct group name/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:ResetDBParameterGroupResponse</path>
                <content><![CDATA[<ResetDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResetDBParameterGroupResult>
    <DBParameterGroupName>modify-paramgroup</DBParameterGroupName>
  </ResetDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</ResetDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Parameters.member.1.ApplyMethod" value="immediate"/>
              <con:entry key="ResetAllParameters" value="false"/>
              <con:entry key="Action" value="ResetDBParameterGroup"/>
              <con:entry key="Parameters.member.1.ParameterName" value="binlog_cache_size"/>
              <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe DB Parameters to check that binlog_cache_size has been reset">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe DB Parameters to check that binlog_cache_size has been reset" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Binlog_cache_size value is back to default (32768)">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Value>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="binlog_cache_size"
return $x/data(ns1:ParameterValue)
}
&lt;/Value></path>
                <content>&lt;Value>32768&lt;/Value></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Binlog_cache_size source is back to system">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Source>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="binlog_cache_size"
return $x/data(ns1:Source)
}
&lt;/Source></path>
                <content>&lt;Source>system&lt;/Source></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Action" value="DescribeDBParameters"/>
              <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Reset all parameters">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="ResetDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Reset all parameters" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:ResetDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct group name/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:ResetDBParameterGroupResponse</path>
                <content><![CDATA[<ResetDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResetDBParameterGroupResult>
    <DBParameterGroupName>modify-paramgroup</DBParameterGroupName>
  </ResetDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</ResetDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="ResetAllParameters" value="true"/>
              <con:entry key="Action" value="ResetDBParameterGroup"/>
              <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe (no values should exist in user source anymore)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe (no values should exist in user source anymore)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="No parameters are under source = user">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(//ns1:Parameter)</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Source" value="user"/>
              <con:entry key="Action" value="DescribeDBParameters"/>
              <con:entry key="DBParameterGroupName" value="modify-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete 'modify-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete 'modify-paramgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Received DeleteDBParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupName" value="modify-paramgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="DB Security Group Test Suite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create/Delete/Describe DB Security Group Simple Test" searchProperties="true" id="3d3eb981-4c44-4e5e-ad4b-cc566bf109f8">
      <con:settings/>
      <con:testStep type="restrequest" name="Create examplesecuritygroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create examplesecuritygroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBSecurityGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data for examplesecuritygroup">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBSecurityGroupResponse</path>
                <content><![CDATA[<CreateDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBSecurityGroupResult>
    <DBSecurityGroup>
      <DBSecurityGroupDescription>An example security group</DBSecurityGroupDescription>
      <DBSecurityGroupName>examplesecuritygroup</DBSecurityGroupName>
      <EC2SecurityGroups/>
      <IPRanges/>
      <OwnerId>*</OwnerId>
    </DBSecurityGroup>
  </CreateDBSecurityGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBSecurityGroupName" value="examplesecuritygroup"/>
              <con:entry key="DBSecurityGroupDescription" value="An example security group"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Use default parameters for Describe to check group was added">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Use default parameters for Describe to check group was added" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response typ eis DescribeDBSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="examplesecuritygroup shows up in data returned">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBSecurityGroup
where $x/ns1:DBSecurityGroupName = "examplesecuritygroup"
return 'examplesecuritygroup is present'
}
&lt;/Result></path>
                <content>&lt;Result>examplesecuritygroup is present&lt;/Result></content>
                <allowWildcards>true</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Use specific group name for Describe check group was added">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Use specific group name for Describe check group was added" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="examplesecuritygroup shows up in the response">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBSecurityGroup
where $x/data(ns1:DBSecurityGroupName) = "examplesecuritygroup"
return "examplesecuritygroup exists"
}
&lt;/Result></path>
                <content>&lt;Result>examplesecuritygroup exists&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="examplesecuritygroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete examplesecuritygroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete examplesecuritygroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBSecurityGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="examplesecuritygroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Check examplesecuritygroup is no longer present">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Check examplesecuritygroup is no longer present" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that examplesecuritygroup is no longer in the table">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBSecurityGroup
where $x/ns1:DBSecurityGroupName = "examplesecuritygroup"
return 'examplesecuritygroup still in table'
}
&lt;/Result></path>
                <content>&lt;Result/></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Creating a Duplicate Security Group" searchProperties="true" id="6e422a87-9b46-4446-be97-610d0958b59d">
      <con:settings/>
      <con:testStep type="restrequest" name="Create repeat-group">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create repeat-group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBSecurityGroupResposnse" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data for repeat-group" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBSecurityGroupResponse</path>
                <content><![CDATA[<CreateDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBSecurityGroupResult>
    <DBSecurityGroup>
      <DBSecurityGroupDescription>A group used to test creating duplicate groups</DBSecurityGroupDescription>
      <DBSecurityGroupName>repeat-group</DBSecurityGroupName>
      <EC2SecurityGroups/>
      <IPRanges/>
      <OwnerId>*</OwnerId>
    </DBSecurityGroup>
  </CreateDBSecurityGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBSecurityGroupName" value="repeat-group"/>
              <con:entry key="DBSecurityGroupDescription" value="A group used to test creating duplicate groups"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe to check group was added">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe to check group was added" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDbSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for repeat-group is in the table">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBSecurityGroup
where $x/ns1:DBSecurityGroupName = "repeat-group"
return 'repeat-group is present'
}
&lt;/Result></path>
                <content>&lt;Result>repeat-group is present&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create duplicate repeat-group">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create duplicate repeat-group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is an ErrorResposne">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is DBSecurityGroupAlreadyExist">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBSecurityGroupAlreadyExist</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBSecurityGroupName" value="repeat-group"/>
              <con:entry key="DBSecurityGroupDescription" value="A different description than the original repeat-group."/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete repeat-group">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete repeat-group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBSecurityGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="repeat-group" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Check repeat-group is no longer present">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Check repeat-group is no longer present" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that repeat-group is no longer in the table">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBSecurityGroup
where $x/ns1:DBSecurityGroupName = "repeat-group"
return 'repeat-group is present'
}
&lt;/Result></path>
                <content>&lt;Result/></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Deleting a non-existant security group" searchProperties="true" id="bd32c9a6-c1c3-4a8f-b031-5a602f74b285">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt to delete 'nonexistant-group'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to delete 'nonexistant-group'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is an ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error ode is DBSecurityGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBSecurityGroupNotFound</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="nonexistant-group" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Giving Create DB Security Group Invalid Parameters" searchProperties="true" id="333c46bb-db86-4143-bb37-86e5894d566d">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt to create 'test-group' with no description">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create 'test-group' with no description" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is an ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="test-group" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create security group with no name">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create security group with no name" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is MissingParameter">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupDescription" value="This security group should not exist." xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authorize/Revoke Ingress basic test" searchProperties="true" id="e8fece41-f58c-4497-a193-874422fab3d5">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Security Group 'ingress-testgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Security Group 'ingress-testgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBSecurityGroupResponse" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data for ingress-testgroup" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBSecurityGroupResponse</path>
                <content><![CDATA[<CreateDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBSecurityGroupResult>
    <DBSecurityGroup>
      <DBSecurityGroupDescription>Security group used for testing authorizing/revoking ingresses</DBSecurityGroupDescription>
      <DBSecurityGroupName>ingress-testgroup</DBSecurityGroupName>
      <EC2SecurityGroups/>
      <IPRanges/>
      <OwnerId>*</OwnerId>
    </DBSecurityGroup>
  </CreateDBSecurityGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBSecurityGroupName" value="ingress-testgroup"/>
              <con:entry key="DBSecurityGroupDescription" value="Security group used for testing authorizing/revoking ingresses"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Add ingress 172.5.255.1/32">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="AuthorizeDBSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Add ingress 172.5.255.1/32" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is AuthorizeDBSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:AuthorizeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="172.5.255.1/32 is now authorized in ingress-testgroup">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:IPRange</path>
                <content><![CDATA[<IPRange xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CIDRIP>172.5.255.1/32</CIDRIP>
  <Status>authorized</Status>
</IPRange>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CIDRIP" value="172.5.255.1/32"/>
              <con:entry key="DBSecurityGroupName" value="ingress-testgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe to ensure ingress was authorized">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe to ensure ingress was authorized" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that ingress-testgroup has correct IP Ranges">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $z in //ns1:DBSecurityGroup
where $z/ns1:DBSecurityGroupName = "ingress-testgroup"
return $z/ns1:IPRanges
}
&lt;/Result></path>
                <content><![CDATA[<Result>
  <IPRanges xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
    <IPRange>
      <CIDRIP>172.5.255.1/32</CIDRIP>
      <Status>authorized</Status>
    </IPRange>
  </IPRanges>
</Result>]]></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="ingress-testgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Revoke ingress 172.5.255.1/32">
        <con:settings/>
        <con:config service="TopStack RDS" methodName="RevokeDBSecurityGroupIngress" resourcePath="/RDSQuery/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Revoke ingress 172.5.255.1/32" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is RevokeDBSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:RevokeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Status of 172.5.255.1/32 IP Range is now &quot;revoking&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Status>
{
for $x in //ns1:IPRange
where $x/data(ns1:CIDRIP) ="172.5.255.1/32"
return $x/data(ns1:Status)
}
&lt;/Status></path>
                <content>&lt;Status>revoking&lt;/Status></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Action" value="RevokeDBSecurityGroupIngress"/>
              <con:entry key="CIDRIP" value="172.5.255.1/32"/>
              <con:entry key="SignatureMethod" value="${#Project#SignatureMethod}"/>
              <con:entry key="DBSecurityGroupName" value="ingress-testgroup"/>
              <con:entry key="AWSAccessKeyId" value="${#Project#AWSAccessKeyId}"/>
              <con:entry key="Version" value="${#Project#Version}"/>
              <con:entry key="SignatureVersion" value="${#Project#SignatureVersion}"/>
              <con:entry key="Timestamp" value="${#Project#Timestamp}"/>
              <con:entry key="Signature" value="${#Project#Signature}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Security groups to ensure ingress was revoked">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Security groups to ensure ingress was revoked" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="ingress-testgroup no longer is authorized for ingress (no IP Ranges)'">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBSecurityGroup
where $x = "ingress-testgroup"
return $x/IPRanges
}
&lt;/Result></path>
                <content>&lt;Result/></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="ingress-testgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete ingress-testgroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete ingress-testgroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="ingress-testgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Check event was added">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Check event was added" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(//ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="ingress-testgroup event shows up">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:Event/ns1:SourceIdentifier</path>
                <content>ingress-testgroup</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="SourceIdentifier" value="ingress-testgroup"/>
              <con:entry key="Duration" value="1"/>
              <con:entry key="SourceType" value="db-security-group"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authorize Ingress for non-existant group" searchProperties="true" id="6b156d27-c52e-45d7-a7a4-e6abd8c3ee06">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt to authorize ingress to group 'nonexistant'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="AuthorizeDBSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to authorize ingress to group 'nonexistant'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is DBSecurityGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBSecurityGroupNotFound</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CIDRIP" value="0.0.0.0/0"/>
              <con:entry key="DBSecurityGroupName" value="nonexistant"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Revoke Ingress from nonexistant group" searchProperties="true" id="9ae84cfa-1152-4e93-a39b-49e6ab11852e">
      <con:settings/>
      <con:testStep type="restrequest" name="Revoke ingress to 0.0.0.0/0 for group 'nonexistant'">
        <con:settings/>
        <con:config service="TopStack RDS" methodName="RevokeDBSecurityGroupIngress" resourcePath="/RDSQuery/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Revoke ingress to 0.0.0.0/0 for group 'nonexistant'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is DBSecurityGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBSecurityGroupNotFound</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Action" value="RevokeDBSecurityGroupIngress"/>
              <con:entry key="CIDRIP" value="0.0.0.0/0"/>
              <con:entry key="SignatureMethod" value="${#Project#SignatureMethod}"/>
              <con:entry key="DBSecurityGroupName" value="nonexistant"/>
              <con:entry key="AWSAccessKeyId" value="${#Project#AWSAccessKeyId}"/>
              <con:entry key="Version" value="${#Project#Version}"/>
              <con:entry key="SignatureVersion" value="${#Project#SignatureVersion}"/>
              <con:entry key="Timestamp" value="${#Project#Timestamp}"/>
              <con:entry key="Signature" value="${#Project#Signature}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Revoke Ingress from unauthorized CIDRIP" searchProperties="true" id="e12e0cfc-b09e-4450-8870-505a8155b501">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Security Group">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Security Group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBSecurityGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBSecurityGroupResponse</path>
                <content><![CDATA[<CreateDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBSecurityGroupResult>
    <DBSecurityGroup>
      <DBSecurityGroupDescription>Security group used for testing authorizing/revoking ingresses</DBSecurityGroupDescription>
      <DBSecurityGroupName>unauthorized-testgroup</DBSecurityGroupName>
      <EC2SecurityGroups/>
      <IPRanges/>
      <OwnerId>*</OwnerId>
    </DBSecurityGroup>
  </CreateDBSecurityGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBSecurityGroupName" value="unauthorized-testgroup"/>
              <con:entry key="DBSecurityGroupDescription" value="Security group used for testing authorizing/revoking ingresses"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Revoke ingress 0.0.0.0/0">
        <con:settings/>
        <con:config service="TopStack RDS" methodName="RevokeDBSecurityGroupIngress" resourcePath="/RDSQuery/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Revoke ingress 0.0.0.0/0" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is AuthorizationNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>AuthorizationNotFound</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Action" value="RevokeDBSecurityGroupIngress"/>
              <con:entry key="CIDRIP" value="0.0.0.0/0"/>
              <con:entry key="SignatureMethod" value="${#Project#SignatureMethod}"/>
              <con:entry key="DBSecurityGroupName" value="unauthorized-testgroup"/>
              <con:entry key="AWSAccessKeyId" value="${#Project#AWSAccessKeyId}"/>
              <con:entry key="Version" value="${#Project#Version}"/>
              <con:entry key="SignatureVersion" value="${#Project#SignatureVersion}"/>
              <con:entry key="Timestamp" value="${#Project#Timestamp}"/>
              <con:entry key="Signature" value="${#Project#Signature}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete unauthorized-testgroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete unauthorized-testgroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="unauthorized-testgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authorize Ingress that has already been authorized" searchProperties="true" id="61284516-cc55-490e-be71-a3a564545807">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Security Group">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Security Group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBSecurityGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBSecurityGroupResponse</path>
                <content><![CDATA[<CreateDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBSecurityGroupResult>
    <DBSecurityGroup>
      <DBSecurityGroupDescription>Security group used for testing authorizing ingresses</DBSecurityGroupDescription>
      <DBSecurityGroupName>repeatauth-testgroup</DBSecurityGroupName>
      <EC2SecurityGroups/>
      <IPRanges/>
      <OwnerId>*</OwnerId>
    </DBSecurityGroup>
  </CreateDBSecurityGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBSecurityGroupName" value="repeatauth-testgroup"/>
              <con:entry key="DBSecurityGroupDescription" value="Security group used for testing authorizing ingresses"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Add ingress 0.0.0.0/0">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="AuthorizeDBSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Add ingress 0.0.0.0/0" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is AuthorizeDBSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:AuthorizeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="IPRange shows up as authorized">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:IPRange</path>
                <content><![CDATA[<IPRange xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CIDRIP>0.0.0.0/0</CIDRIP>
  <Status>authorized</Status>
</IPRange>]]></content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CIDRIP" value="0.0.0.0/0"/>
              <con:entry key="DBSecurityGroupName" value="repeatauth-testgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Authorize ingress 0.0.0.0/0 again">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="AuthorizeDBSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authorize ingress 0.0.0.0/0 again" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is AuthorizationAlreadyExists">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>AuthorizationAlreadyExists</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CIDRIP" value="0.0.0.0/0"/>
              <con:entry key="DBSecurityGroupName" value="repeatauth-testgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete repeatauth-testgroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete repeatauth-testgroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="repeatauth-testgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Clear groups in case any test failed" searchProperties="true" id="9f103939-df68-4554-8991-819b13cdcff6">
      <con:settings/>
      <con:testStep type="restrequest" name="Copy of Delete examplesecuritygroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of Delete examplesecuritygroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBSecurityGroupResponse" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="examplesecuritygroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Copy of Delete repeat-group">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of Delete repeat-group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBSecurityGroupResponse" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="repeat-group" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Copy of Delete ingress-testgroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of Delete ingress-testgroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="ingress-testgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Copy of Delete unauthorized-testgroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of Delete unauthorized-testgroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="unauthorized-testgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Copy of Delete repeatauth-testgroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of Delete repeatauth-testgroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="repeatauth-testgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Security groups">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Security groups" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Basic Describe Events tests">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Basic Describe Events call" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe Events simple call (duration=60)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Events simple call (duration=60)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Output actually contains events">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(//ns1:Event)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe Events by setting times" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe Events request with start and end times set">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Events request with start and end times set" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Output actually contains events">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(//ns1:Event)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Duration" value=""/>
              <con:entry key="EndTime" value="2013-10-1T16:09:10.000Z"/>
              <con:entry key="StartTime" value="2012-11-20T16:09:10.000Z"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe Events by source types" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe Events request by type db-security-groups">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Events request by type db-security-groups" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Output actually contains events">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(//ns1:Event)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Source types for the response elements are all db-security-group">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:Event
where $x/data(ns1:SourceType)!="db-security-group"
return "Source type for an event is not db-security-group"
}
&lt;/Result></path>
                <content>&lt;Result/></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="SourceType" value="db-security-group" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Events request by type db-instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Events request by type db-instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="SourceType" value="db-instance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Events request by type db-snapshot">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Events request by type db-snapshot" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="SourceType" value="db-instance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Invalid values for start/end times" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe Events simple call (StartTime = 5pm)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Events simple call (StartTime = 5pm)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Output actually contains events">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(//ns1:Event)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Duration" value=""/>
              <con:entry key="EndTime" value="2013-10-1T16:09:10.000Z"/>
              <con:entry key="StartTime" value="5pm"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Events simple call (EndTime = 5pm)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Events simple call (EndTime = 5pm)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Output actually contains events">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(//ns1:Event)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Duration" value=""/>
              <con:entry key="EndTime" value="2013-10-1T16:09:10.000Z"/>
              <con:entry key="StartTime" value="5pm"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Tests for DB Instances" disabled="true">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to create DBInstance with invalid mandatory parameters" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Security Group 'unused-securitygroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Security Group 'unused-securitygroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is correct">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBSecurityGroupName" value="unused-securitygroup"/>
              <con:entry key="DBSecurityGroupDescription" value="A security group only used to give a valid security group to DBInstance creation test."/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Create Parameter Group 'unused-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Parameter Group 'unused-paramgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data for 'unused-paramgroup'">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBParameterGroupResponse</path>
                <content><![CDATA[<CreateDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBParameterGroupResult>
    <DBParameterGroup>
      <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
      <DBParameterGroupName>unused-paramgroup</DBParameterGroupName>
      <Description>A parameter group only used to give a valid group to test invalid DBInstance creation.</Description>
    </DBParameterGroup>
  </CreateDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="Description" value="A parameter group only used to give a valid group to test invalid DBInstance creation."/>
              <con:entry key="DBParameterGroupName" value="unused-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create DBInstance with invalid DBInstanceIdentifier 'in--valid'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create DBInstance with invalid DBInstanceIdentifier 'in--valid'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is InternalFailure">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InternalFailure</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="in--valid"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="unused-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="unused-paramgroup"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="MasterUsername" value="transcen"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create DBInstance with invalid DBInstanceIdentifier '1invalid'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create DBInstance with invalid DBInstanceIdentifier '1invalid'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is InternalFailure">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InternalFailure</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="1invalid"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="unused-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="unused-paramgroup"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="MasterUsername" value="transcend"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create DBInstance with invalid DBInstanceIdentifier 'invalid-'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create DBInstance with invalid DBInstanceIdentifier 'invalid-'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is InternalFailure">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InternalFailure</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="invalid-"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="unused-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="unused-paramgroup"/>
              <con:entry key="PreferredMaintenanceWindow" value=""/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="MasterUsername" value="transcen"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Attempt to create DBInstance with invalid DBInstanceClass">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create DBInstance with invalid DBInstanceClass" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is InternalFailure">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidParameterValue</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="invalid-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="big"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="unused-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="unused-paramgroup"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="msi"/>
              <con:entry key="MasterUsername" value="msi"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Missing MasterUsername">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Missing MasterUsername" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBInstanceResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CreateDBInstance response has correct data/format">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="MasterUsername" value="msi"/>
              <con:entry key="DBInstanceIdentifier" value="asaenz-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="asaenz-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="asaenz-paramgroup"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Missing MasterUserPassword">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Missing MasterUserPassword" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBInstanceResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CreateDBInstance response has correct data/format">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="MasterUsername" value="msi"/>
              <con:entry key="DBInstanceIdentifier" value="unused-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="unused-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="unused-paramgroup"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Invalid Engine" disabled="true">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Invalid Engine" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBInstanceResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CreateDBInstance response has correct data/format">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="unused-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="unused-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="msicluster2"/>
              <con:entry key="DBParameterGroupName" value="unused-paramgroup"/>
              <con:entry key="Engine" value="invalid"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="MasterUsername" value="transcend"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Invalid AvailabilityZone" disabled="true">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Invalid AvailabilityZone" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBInstanceResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CreateDBInstance response has correct data/format">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>MissingParameter</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="unused-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="unused-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="nowhere"/>
              <con:entry key="DBParameterGroupName" value="unused-paramgroup"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="MasterUsername" value="transcend"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Giving nonexistant parameter group">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Giving nonexistant parameter group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CreateDBInstance response has correct data/format">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBParameterGroupNotFound</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="unused-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="unused-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="nonexistant"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="MasterUsername" value="transcend"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Giving nonexistant security group">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Giving nonexistant security group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is DBSecurityGroupNotFound">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBSecurityGroupNotFound</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="unused-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="nonexistant"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="unused-paramgroup"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="MasterUsername" value="transcend"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete 'unused-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete 'unused-paramgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response is DeleteDBParameterGroupResponse type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupName" value="unused-paramgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete 'unused-securitygroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete 'unused-securitygroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBSecurityGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="unused-securitygroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create necessary groups for instance creation" searchProperties="true" id="ed3148c5-068d-4e08-b8d0-9f976a9e7d47">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Security Group 'testmsi-securitygroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Security Group 'testmsi-securitygroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is correct" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBSecurityGroupName" value="testmsi-securitygroup"/>
              <con:entry key="DBSecurityGroupDescription" value="Security group for testing on Eucalyptus."/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Authorize Ingress 0.0.0.0/0">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="AuthorizeDBSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authorize Ingress 0.0.0.0/0" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is AuthorizeDBSecurityGroupIngressResponse" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:AuthorizeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="IPRange has been added" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where $x/ns1:CIDRIP = "0.0.0.0/0"
return $x
}
&lt;/Result></path>
                <content><![CDATA[<Result>
  <IPRange xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
    <CIDRIP>0.0.0.0/0</CIDRIP>
    <Status>authorized</Status>
  </IPRange>
</Result>]]></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CIDRIP" value="0.0.0.0/0"/>
              <con:entry key="DBSecurityGroupName" value="testmsi-securitygroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Create Parameter Group 'testmsi-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Parameter Group 'testmsi-paramgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBParameterGroupResponse" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data for parameter group" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:CreateDBParameterGroupResult</path>
                <content><![CDATA[<CreateDBParameterGroupResult xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <DBParameterGroup>
    <DBParameterGroupFamily>mysql5.5</DBParameterGroupFamily>
    <DBParameterGroupName>testmsi-paramgroup</DBParameterGroupName>
    <Description>A parameter group used for testing on Euca.</Description>
  </DBParameterGroup>
</CreateDBParameterGroupResult>]]></content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBParameterGroupFamily" value="mysql5.5"/>
              <con:entry key="Description" value="A parameter group used for testing on Euca."/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Authorize ingress group" disabled="true">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="AuthorizeDBSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authorize ingress group" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is AuthorizeDBSecurityGroupIngressResponse" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:AuthorizeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="IPRange has been added" disabled="true">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where $x/ns1:CIDRIP = "0.0.0.0/0"
return $x
}
&lt;/Result></path>
                <content><![CDATA[<Result>
  <IPRange xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
    <CIDRIP>0.0.0.0/0</CIDRIP>
    <Status>authorized</Status>
  </IPRange>
</Result>]]></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBSecurityGroupName" value="testmsi-securitygroup"/>
              <con:entry key="EC2SecurityGroupName" value="default"/>
              <con:entry key="EC2SecurityGroupOwnerId" value="1"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create a DB instance" searchProperties="true" id="85b59b1d-f7d5-46ed-b96f-f67cc9bd6e6d">
      <con:settings/>
      <con:testStep type="restrequest" name="Create DB Instance 'testmsi-rdsinstance'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create DB Instance 'testmsi-rdsinstance'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CreateDBInstance response has correct information and tags">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:CreateDBInstanceResult</path>
                <content><![CDATA[<CreateDBInstanceResult xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <DBInstance>
    <AllocatedStorage>7</AllocatedStorage>
    <AutoMinorVersionUpgrade>false</AutoMinorVersionUpgrade>
    <AvailabilityZone>*</AvailabilityZone>
    <BackupRetentionPeriod>1</BackupRetentionPeriod>
    <DBInstanceClass>db.m1.large</DBInstanceClass>
    <DBInstanceIdentifier>testmsi-rdsinstance</DBInstanceIdentifier>
    <DBInstanceStatus>creating</DBInstanceStatus>
    <DBParameterGroups>
      <DBParameterGroup>
        <DBParameterGroupName>testmsi-paramgroup</DBParameterGroupName>
        <ParameterApplyStatus>in-sync</ParameterApplyStatus>
      </DBParameterGroup>
    </DBParameterGroups>
    <DBSecurityGroups>
      <DBSecurityGroup>
        <Status>active</Status>
        <DBSecurityGroupName>testmsi-securitygroup</DBSecurityGroupName>
      </DBSecurityGroup>
    </DBSecurityGroups>
    <Engine>mysql</Engine>
    <EngineVersion>5.5.20</EngineVersion>
    <InstanceCreateTime>*</InstanceCreateTime>
    <LicenseModel>general-public-license</LicenseModel>
    <LatestRestorableTime>*</LatestRestorableTime>
    <MultiAZ>false</MultiAZ>
    <PendingModifiedValues/>
    <PreferredBackupWindow>05:00-05:30</PreferredBackupWindow>
    <PreferredMaintenanceWindow>Sun:05:30-Sun:06:00</PreferredMaintenanceWindow>
    <MasterUsername>msi</MasterUsername>
  </DBInstance>
</CreateDBInstanceResult>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="db.m1.large"/>
              <con:entry key="AllocatedStorage" value="7"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="testmsi-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="Port" value=""/>
              <con:entry key="MasterUsername" value="transcend"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check instance status is creating">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check instance status is creating" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response has correct container tags">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse/ns1:DescribeDBInstancesResult/ns1:DBInstances)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance status for testmsi-rdsinstance = creating">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;DBInstanceStatus>
{
for $x in //ns1:DBInstance
where $x/data(ns1:DBInstanceIdentifier = "testmsi-rdsinstance")
return $x/data(ns1:DBInstanceStatus)
}
&lt;/DBInstanceStatus></path>
                <content>&lt;DBInstanceStatus>creating&lt;/DBInstanceStatus></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay for Instance Creation (7 minutes)">
        <con:settings/>
        <con:config>
          <delay>420000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check instance is available">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check instance is available" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response has correct container tags">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse/ns1:DescribeDBInstancesResult/ns1:DBInstances)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance status for testmsi-rdsinstance = available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;DBInstanceStatus>
{
for $x in //ns1:DBInstance
where $x/data(ns1:DBInstanceIdentifier = "testmsi-rdsinstance")
return $x/data(ns1:DBInstanceStatus)
}
&lt;/DBInstanceStatus></path>
                <content>&lt;DBInstanceStatus>available&lt;/DBInstanceStatus></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe DB Instance" searchProperties="true" id="fd1cc638-de3b-482d-a7e5-e77410000e49">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe all Instances">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe all Instances" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstancesResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse/ns1:DescribeDBInstancesResult/ns1:DBInstances)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance shows up in the describe (in database)">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBInstance
where $x/data(ns1:DBInstanceIdentifier) = "testmsi-rdsinstance"
return "Instance shows up in database"
}
&lt;/Result></path>
                <content>&lt;Result>Instance shows up in database&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance status for testmsi-rdsinstance = available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;DBInstanceStatus>
{
for $x in //ns1:DBInstance
where $x/data(ns1:DBInstanceIdentifier = "testmsi-rdsinstance")
return $x/data(ns1:DBInstanceStatus)
}
&lt;/DBInstanceStatus></path>
                <content>&lt;DBInstanceStatus>available&lt;/DBInstanceStatus></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Whole entry for DBInstance is correct">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DescribeDBInstancesResult</path>
                <content><![CDATA[<DescribeDBInstancesResult xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <DBInstances>
    <DBInstance>
      <AllocatedStorage>7</AllocatedStorage>
      <AutoMinorVersionUpgrade>false</AutoMinorVersionUpgrade>
      <AvailabilityZone>*</AvailabilityZone>
      <BackupRetentionPeriod>1</BackupRetentionPeriod>
      <DBInstanceClass>db.m1.large</DBInstanceClass>
      <DBInstanceIdentifier>testmsi-rdsinstance</DBInstanceIdentifier>
      <DBInstanceStatus>available</DBInstanceStatus>
      <DBParameterGroups>
        <DBParameterGroup>
          <DBParameterGroupName>testmsi-paramgroup</DBParameterGroupName>
          <ParameterApplyStatus>in-sync</ParameterApplyStatus>
        </DBParameterGroup>
      </DBParameterGroups>
      <DBSecurityGroups>
        <DBSecurityGroup>
          <Status>active</Status>
          <DBSecurityGroupName>testmsi-securitygroup</DBSecurityGroupName>
        </DBSecurityGroup>
      </DBSecurityGroups>
      <Endpoint>
        <Address>*</Address>
        <Port>3306</Port>
      </Endpoint>
      <Engine>mysql</Engine>
      <EngineVersion>5.5.20</EngineVersion>
      <InstanceCreateTime>*</InstanceCreateTime>
      <LicenseModel>general-public-license</LicenseModel>
      <LatestRestorableTime>*</LatestRestorableTime>
      <MultiAZ>false</MultiAZ>
      <PendingModifiedValues/>
      <PreferredBackupWindow>05:00-05:30</PreferredBackupWindow>
      <PreferredMaintenanceWindow>Sun:05:30-Sun:06:00</PreferredMaintenanceWindow>
      <MasterUsername>msi</MasterUsername>
    </DBInstance>
  </DBInstances>
</DescribeDBInstancesResult>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances with specific name of instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances with specific name of instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response has correct container tags">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse/ns1:DescribeDBInstancesResult/ns1:DBInstances)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance shows up in the describe (in database)">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBInstance
where $x/data(ns1:DBInstanceIdentifier) = "testmsi-rdsinstance"
return "Instance shows up in database"
}
&lt;/Result></path>
                <content>&lt;Result>Instance shows up in database&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance status for testmsi-rdsinstance = available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;DBInstanceStatus>
{
for $x in //ns1:DBInstance
where $x/data(ns1:DBInstanceIdentifier = "testmsi-rdsinstance")
return $x/data(ns1:DBInstanceStatus)
}
&lt;/DBInstanceStatus></path>
                <content>&lt;DBInstanceStatus>available&lt;/DBInstanceStatus></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Whole entry for DBInstance is correct">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DescribeDBInstancesResult</path>
                <content><![CDATA[<DescribeDBInstancesResult xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <DBInstances>
    <DBInstance>
      <AllocatedStorage>7</AllocatedStorage>
      <AutoMinorVersionUpgrade>false</AutoMinorVersionUpgrade>
      <AvailabilityZone>*</AvailabilityZone>
      <BackupRetentionPeriod>1</BackupRetentionPeriod>
      <DBInstanceClass>db.m1.large</DBInstanceClass>
      <DBInstanceIdentifier>testmsi-rdsinstance</DBInstanceIdentifier>
      <DBInstanceStatus>available</DBInstanceStatus>
      <DBParameterGroups>
        <DBParameterGroup>
          <DBParameterGroupName>testmsi-paramgroup</DBParameterGroupName>
          <ParameterApplyStatus>in-sync</ParameterApplyStatus>
        </DBParameterGroup>
      </DBParameterGroups>
      <DBSecurityGroups>
        <DBSecurityGroup>
          <Status>active</Status>
          <DBSecurityGroupName>testmsi-securitygroup</DBSecurityGroupName>
        </DBSecurityGroup>
      </DBSecurityGroups>
      <Endpoint>
        <Address>*</Address>
        <Port>3306</Port>
      </Endpoint>
      <Engine>mysql</Engine>
      <EngineVersion>5.5.20</EngineVersion>
      <InstanceCreateTime>*</InstanceCreateTime>
      <LicenseModel>general-public-license</LicenseModel>
      <LatestRestorableTime>*</LatestRestorableTime>
      <MultiAZ>false</MultiAZ>
      <PendingModifiedValues/>
      <PreferredBackupWindow>05:00-05:30</PreferredBackupWindow>
      <PreferredMaintenanceWindow>Sun:05:30-Sun:06:00</PreferredMaintenanceWindow>
      <MasterUsername>msi</MasterUsername>
    </DBInstance>
  </DBInstances>
</DescribeDBInstancesResult>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check Create DB instance event was added" searchProperties="true" id="7c8d4cd2-bfce-49a7-b640-221aecfbb1e5">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe events">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe events" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Message = &quot;Database instance created&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:Event/ns1:Message</path>
                <content>Database instance created</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="SourceIdentifier" value="testmsi-rdsinstance"/>
              <con:entry key="SourceType" value="db-instance"/>
              <con:entry key="Duration" value="10"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to create already existing DBInstance" searchProperties="true" id="1961942a-76e6-4f01-ae6d-4830db64d019">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt to create 'testmsi-rdsinstance' again">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to create 'testmsi-rdsinstance' again" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error Code is DBInstanceAlreadyExists">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBInstanceAlreadyExists</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="db.m1.large"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="testmsi-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="${#Project#AvailabilityZone}"/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="MasterUsername" value="transcend"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authorize Ingress to security group attached to instance" searchProperties="true" id="b2e27e9e-1f65-46cb-83df-29817b722c0d">
      <con:settings/>
      <con:testStep type="restrequest" name="Authorize ingress 172.5.255.1/32">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="AuthorizeDBSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authorize ingress 172.5.255.1/32" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is AuthorizeDBSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:AuthorizeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="IPRange has been added">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where $x/ns1:CIDRIP = "172.5.255.1/32"
return $x
}
&lt;/Result></path>
                <content><![CDATA[<Result>
  <IPRange xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
    <CIDRIP>172.5.255.1/32</CIDRIP>
    <Status>authorized</Status>
  </IPRange>
</Result>]]></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CIDRIP" value="172.5.255.1/32"/>
              <con:entry key="DBSecurityGroupName" value="testmsi-securitygroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe security groupto check group's ingresses">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe security groupto check group's ingresses" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that 172.5.255.1/32 is now authorized">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where$x//ns1:CIDRIP = "172.5.255.1/32"
return "172.5.255.1/32 is authorized"
}
&lt;/Result></path>
                <content>&lt;Result>172.5.255.1/32 is authorized&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="testmsi-securitygroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Revoke Ingress to group attached to instance" searchProperties="true" id="585c1e74-7a3d-453e-a541-ea8c93cc3456">
      <con:settings/>
      <con:testStep type="restrequest" name="Revoke ingress 0.0.0.0/0 (authorized before instance creation)">
        <con:settings/>
        <con:config service="TopStack RDS" methodName="RevokeDBSecurityGroupIngress" resourcePath="/RDSQuery/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Revoke ingress 0.0.0.0/0 (authorized before instance creation)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is RevokeDBSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:RevokeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that status of 0.0,0.0/0 is &quot;revoking&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where $x/ns1:CIDRIP = "0.0.0.0/0"
return $x/ns1:Status = "revoking"
}
&lt;/Result></path>
                <content>&lt;Result>true&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Action" value="RevokeDBSecurityGroupIngress"/>
              <con:entry key="CIDRIP" value="0.0.0.0/0"/>
              <con:entry key="SignatureMethod" value="${#Project#SignatureMethod}"/>
              <con:entry key="DBSecurityGroupName" value="testmsi-securitygroup"/>
              <con:entry key="AWSAccessKeyId" value="${#Project#AWSAccessKeyId}"/>
              <con:entry key="Version" value="${#Project#Version}"/>
              <con:entry key="SignatureVersion" value="${#Project#SignatureVersion}"/>
              <con:entry key="Timestamp" value="${#Project#Timestamp}"/>
              <con:entry key="Signature" value="${#Project#Signature}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Revoke ingress 172.5.255.1/32 (authorized after instance creation)">
        <con:settings/>
        <con:config service="TopStack RDS" methodName="RevokeDBSecurityGroupIngress" resourcePath="/RDSQuery/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Revoke ingress 172.5.255.1/32 (authorized after instance creation)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is RevokeDBSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:RevokeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that status of 172.5.255.1/32 is &quot;revoking&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where $x/ns1:CIDRIP = "172.5.255.1/32"
return $x/ns1:Status = "revoking"
}
&lt;/Result></path>
                <content>&lt;Result>true&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CIDRIP" value="172.5.255.1/32"/>
              <con:entry key="Action" value="RevokeDBSecurityGroupIngress"/>
              <con:entry key="DBSecurityGroupName" value="testmsi-securitygroup"/>
              <con:entry key="SignatureMethod" value="${#Project#SignatureMethod}"/>
              <con:entry key="AWSAccessKeyId" value="${#Project#AWSAccessKeyId}"/>
              <con:entry key="SignatureVersion" value="${#Project#SignatureVersion}"/>
              <con:entry key="Version" value="${#Project#Version}"/>
              <con:entry key="Signature" value="${#Project#Signature}"/>
              <con:entry key="Timestamp" value="${#Project#Timestamp}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe to check group's ingresses">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe to check group's ingresses" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that 0.0.0.0/0 is no longer in security group's IP Ranges">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where$x//ns1:CIDRIP = "0.0.0.0/0"
return "0.0.0.0/0 is still authorized"
}
&lt;/Result></path>
                <content>&lt;Result/></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that 172.5.255.1/32 is no longer in security group's IP Ranges">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where$x//ns1:CIDRIP = "172.5.255.1/32"
return "172.5.255.1/32 is still authorized"
}
&lt;/Result></path>
                <content>&lt;Result/></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="testmsi-securitygroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to delete security group attached to instance" searchProperties="true" id="8fd5da37-5b42-48e3-9515-b3252f2dc16f">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt to delete security group associated with instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to delete security group associated with instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is InvalidDBSecurityGroupState">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidDBSecurityGroupState</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="testmsi-securitygroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Attempt to delete parameter group attached to instance" searchProperties="true" id="d8e63c05-b99b-4b5c-bd92-1de754e92b2f">
      <con:settings/>
      <con:testStep type="restrequest" name="Attempt to delete parameter group associated with instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Attempt to delete parameter group associated with instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Error code is InvalidDBParameterGroupState">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>InvalidDBParameterGroupState</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupName" value="testmsi-paramgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reboot DB Instance" searchProperties="true" id="adbf2531-3e89-45af-9f44-52ff15d888b4">
      <con:settings/>
      <con:testStep type="restrequest" name="Reboot Instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="RebootDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Reboot Instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is RebootDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:RebootDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance status set to rebooting">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;DBInstanceStatus>
{
for $x in //ns1:DBInstance
return $x/data(ns1:DBInstanceStatus)
}
&lt;/DBInstanceStatus></path>
                <content>&lt;DBInstanceStatus>rebooting&lt;/DBInstanceStatus></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 2.5 minutes for reboot">
        <con:settings/>
        <con:config>
          <delay>150000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check status of reboot (check assertions)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check status of reboot (check assertions)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response has correct type/container tags">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse/ns1:DescribeDBInstancesResult/ns1:DBInstances)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance shows up in the describe (in database)">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBInstance
where $x/data(ns1:DBInstanceIdentifier) = "testmsi-rdsinstance"
return "Instance shows up in database"
}
&lt;/Result></path>
                <content>&lt;Result>Instance shows up in database&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance status for testmsi-rdsinstance = available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;DBInstanceStatus>
{
for $x in //ns1:DBInstance
where $x/data(ns1:DBInstanceIdentifier = "testmsi-rdsinstance")
return $x/data(ns1:DBInstanceStatus)
}
&lt;/DBInstanceStatus></path>
                <content>&lt;DBInstanceStatus>available&lt;/DBInstanceStatus></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify Parameter group attached to Instance" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Modify parameter binlog_cache_size in testmsi-paramgroup">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="ModifyDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Modify parameter binlog_cache_size in testmsi-paramgroup" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ModifyDBParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:ModifyDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format for modify">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:ModifyDBParameterGroupResponse</path>
                <content><![CDATA[<ModifyDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ModifyDBParameterGroupResult>
    <DBParameterGroupName>testmsi-paramgroup</DBParameterGroupName>
  </ModifyDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</ModifyDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Parameters.member.1.ParameterValue" value="15000"/>
              <con:entry key="Parameters.member.1.ApplyMethod" value="immediate"/>
              <con:entry key="Parameters.member.1.ParameterName" value="binlog_cache_size"/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Modify parameter ft_query_expansion_limit in testmsi-paramgroup (with pending-reboot )">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="ModifyDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Modify parameter ft_query_expansion_limit in testmsi-paramgroup (with pending-reboot )" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ModifyDBParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:ModifyDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check that response data/format is correct for modify">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:ModifyDBParameterGroupResponse</path>
                <content><![CDATA[<ModifyDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ModifyDBParameterGroupResult>
    <DBParameterGroupName>testmsi-paramgroup</DBParameterGroupName>
  </ModifyDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</ModifyDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Parameters.member.1.ParameterValue" value="1000"/>
              <con:entry key="Parameters.member.1.ApplyMethod" value="pending-reboot"/>
              <con:entry key="Parameters.member.1.ParameterName" value="ft_query_expansion_limit"/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe DB Parameters to check values of modified parameters">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe DB Parameters to check values of modified parameters" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for binlog_cache_size has correct value">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Value>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="binlog_cache_size"
return $x/data(ns1:ParameterValue)
}
&lt;/Value></path>
                <content>&lt;Value>15000&lt;/Value></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for binlog_cache_size no longer has source &quot;engine-default&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Source>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="binlog_cache_size"
return $x/data(ns1:Source)
}
&lt;/Source></path>
                <content>&lt;Source>user&lt;/Source></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for ft_query_expansion_limit has correct value">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Value>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="ft_query_expansion_limit"
return $x/data(ns1:ParameterValue)
}
&lt;/Value></path>
                <content>&lt;Value>1000&lt;/Value></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for ft_query_expansion_limit no longer has source &quot;engine-default&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Source>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="ft_query_expansion_limit"
return $x/data(ns1:Source)
}
&lt;/Source></path>
                <content>&lt;Source>user&lt;/Source></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Source" value="user"/>
              <con:entry key="Action" value="DescribeDBParameters"/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="Check that ft_query_expansion_limit has not been set yet on databag">
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="restrequest" name="Reboot Instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="RebootDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Reboot Instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is RebootDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:RebootDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance status set to rebooting">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;DBInstanceStatus>
{
for $x in //ns1:DBInstance
return $x/data(ns1:DBInstanceStatus)
}
&lt;/DBInstanceStatus></path>
                <content>&lt;DBInstanceStatus>rebooting&lt;/DBInstanceStatus></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 2.5 minutes for reboot">
        <con:settings/>
        <con:config>
          <delay>150000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="Check that ft_query_expansion_limit has been set correctly after reboot">
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:expectedResult>ft_query_expansion_limit should now be set to 1000 on the instance</con:expectedResult>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reset Parameter group attached to Instance" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Reset Parameter Group 'testmsi-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="ResetDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Reset Parameter Group 'testmsi-paramgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ResetDBParameterGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:ResetDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format for reset">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:ResetDBParameterGroupResponse</path>
                <content><![CDATA[<ResetDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResetDBParameterGroupResult>
    <DBParameterGroupName>testmsi-paramgroup</DBParameterGroupName>
  </ResetDBParameterGroupResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</ResetDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="ResetAllParameters" value="true"/>
              <con:entry key="Action" value="ResetDBParameterGroup"/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe (no values should exist in user source anymore)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe (no values should exist in user source anymore)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="No parameters are under source = user">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(//ns1:Parameter)</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Source" value="user"/>
              <con:entry key="Action" value="DescribeDBParameters"/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 1 minute for reset">
        <con:settings/>
        <con:config>
          <delay>60000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Reboot Instance to reset">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="RebootDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Reboot Instance to reset" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is RebootDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:RebootDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance status set to rebooting">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;DBInstanceStatus>
{
for $x in //ns1:DBInstance
return $x/data(ns1:DBInstanceStatus)
}
&lt;/DBInstanceStatus></path>
                <content>&lt;DBInstanceStatus>rebooting&lt;/DBInstanceStatus></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 2.5 minutes for reboot(reset)">
        <con:settings/>
        <con:config>
          <delay>150000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="Check if parameters in asaenz-paramgroup have been reset back to default values">
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:expectedResult/>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe DB Parameters to check values of reset parameters">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBParameters" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe DB Parameters to check values of reset parameters" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBParametersResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBParametersResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for binlog_cache_size has correct value">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Value>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="binlog_cache_size"
return $x/data(ns1:ParameterValue)
}
&lt;/Value></path>
                <content>&lt;Value>32768&lt;/Value></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for binlog_cache_size no longer has source &quot;user&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Source>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="binlog_cache_size"
return $x/data(ns1:Source)
}
&lt;/Source></path>
                <content>&lt;Source>system&lt;/Source></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for ft_query_expansion_limit has correct value">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Value>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="ft_query_expansion_limit"
return $x/data(ns1:ParameterValue)
}
&lt;/Value></path>
                <content>&lt;Value/></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Entry for ft_query_expansion_limit no longer has source &quot;user&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Source>
{
for $x in //ns1:Parameter
where $x/data(ns1:ParameterName)="ft_query_expansion_limit"
return $x/data(ns1:Source)
}
&lt;/Source></path>
                <content>&lt;Source>engine-default&lt;/Source></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Action" value="DescribeDBParameters"/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create Snapshot" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Create Snapshot 'testmsi-snapshot'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBSnapshot" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create Snapshot 'testmsi-snapshot'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBSnapshotResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBSnapshotResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Verify information returned in data is correct for the snapshot">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBSnapshotResponse</path>
                <content><![CDATA[<CreateDBSnapshotResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBSnapshotResult>
    <DBSnapshot>
      <AllocatedStorage>5</AllocatedStorage>
      <AvailabilityZone>nova</AvailabilityZone>
      <LicenseModel>general-public-license</LicenseModel>
      <DBInstanceIdentifier>asaenz-rdsinstance</DBInstanceIdentifier>
      <DBSnapshotIdentifier>asaenz-snapshot</DBSnapshotIdentifier>
      <Engine>MySQL</Engine>
      <EngineVersion>5.5.20</EngineVersion>
      <InstanceCreateTime>*</InstanceCreateTime>
      <MasterUsername>msi</MasterUsername>
      <Port>3306</Port>
      <SnapshotCreateTime>*</SnapshotCreateTime>
      <Status>creating</Status>
    </DBSnapshot>
  </CreateDBSnapshotResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBSnapshotResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-rdsinstance"/>
              <con:entry key="DBSnapshotIdentifier" value="testmsi-snapshot"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Snapshots to ensure testmsi-snapshot was created">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSnapshots" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Snapshots to ensure testmsi-snapshot was created" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSnapshotsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSnapshotsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has entry/correct data for testmsi-snapshot">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(//ns1:DBSnapshot[ns1:DBSnapshotIdentifier="testmsi-snapshot"])</path>
                <content>true</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay to allow time for snapshot to finish creating (6 minutes)">
        <con:settings/>
        <con:config>
          <delay>360000</delay>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Describe Snapshots" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe Snapshots with specific name of snapshot">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSnapshots" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Snapshots with specific name of snapshot" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSnapshotsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSnapshotsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has entry/correct data for asaenz-snapshot">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBSnapshot[ns1:DBSnapshotIdentifier="asaenz-snapshot"]</path>
                <content><![CDATA[<DBSnapshot xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <AllocatedStorage>5</AllocatedStorage>
  <AvailabilityZone>nova</AvailabilityZone>
  <DBInstanceIdentifier>asaenz-rdsinstance</DBInstanceIdentifier>
  <DBSnapshotIdentifier>asaenz-snapshot</DBSnapshotIdentifier>
  <Engine>MySQL</Engine>
  <EngineVersion>5.5.20</EngineVersion>
  <InstanceCreateTime>*</InstanceCreateTime>
  <LicenseModel>general-public-license</LicenseModel>
  <MasterUsername>msi</MasterUsername>
  <Port>3306</Port>
  <SnapshotCreateTime>*</SnapshotCreateTime>
  <Status>available</Status>
</DBSnapshot>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSnapshotIdentifier" value="testmsi-snapshot" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Snapshots with specific name of instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSnapshots" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Snapshots with specific name of instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSnapshotsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSnapshotsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has entry/correct data for testmsisnapshot">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBSnapshot[ns1:DBSnapshotIdentifier="asaenz-snapshot"]</path>
                <content><![CDATA[<DBSnapshot xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <AllocatedStorage>5</AllocatedStorage>
  <AvailabilityZone>*</AvailabilityZone>
  <DBInstanceIdentifier>testmsi-rdsinstance</DBInstanceIdentifier>
  <DBSnapshotIdentifier>testmsi-snapshot</DBSnapshotIdentifier>
  <Engine>MySQL</Engine>
  <EngineVersion>5.5.20</EngineVersion>
  <InstanceCreateTime>*</InstanceCreateTime>
  <LicenseModel>general-public-license</LicenseModel>
  <MasterUsername>msi</MasterUsername>
  <Port>3306</Port>
  <SnapshotCreateTime>*</SnapshotCreateTime>
  <Status>available</Status>
</DBSnapshot>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Snapshots with SnapshotType=manual" disabled="true">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSnapshots" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Snapshots with SnapshotType=manual" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="SnapshotType" value="manual" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Snapshots" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete Snapshot">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSnapshot" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Snapshot" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBSnapshotResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSnapshotResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Snapshot status set to deleted">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:Status</path>
                <content>deleted</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSnapshotIdentifier" value="testmsi-snapshot" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay to allow time for snapshot to finish deleting (10 seconds)">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create DB Instance Read Replica using default port" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="CreateDBInstanceReadReplica with inherited port">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstanceReadReplica" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CreateDBInstanceReadReplica with inherited port" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBInstanceReadReplicaResponse, correct container tags">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBInstanceReadReplicaResponse/ns1:CreateDBInstanceReadReplicaResult/ns1:DBInstance)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Correct data for testmsi-readreplica">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBInstanceReadReplicaResponse</path>
                <content><![CDATA[<CreateDBInstanceReadReplicaResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBInstanceReadReplicaResult>
    <DBInstance>
      <AllocatedStorage>7</AllocatedStorage>
      <AutoMinorVersionUpgrade>false</AutoMinorVersionUpgrade>
      <AvailabilityZone>msicluster2</AvailabilityZone>
      <BackupRetentionPeriod>1</BackupRetentionPeriod>
      <DBInstanceClass>db.m1.large</DBInstanceClass>
      <DBInstanceIdentifier>testmsi-readreplica</DBInstanceIdentifier>
      <DBInstanceStatus>creating</DBInstanceStatus>
      <DBParameterGroups>
        <DBParameterGroup>
          <DBParameterGroupName>testmsi-paramgroup</DBParameterGroupName>
          <ParameterApplyStatus>in-sync</ParameterApplyStatus>
        </DBParameterGroup>
      </DBParameterGroups>
      <DBSecurityGroups>
        <DBSecurityGroup>
          <Status>active</Status>
          <DBSecurityGroupName>testmsi-securitygroup</DBSecurityGroupName>
        </DBSecurityGroup>
      </DBSecurityGroups>
      <Engine>mysql</Engine>
      <EngineVersion>5.5.20</EngineVersion>
      <InstanceCreateTime>*</InstanceCreateTime>
      <LicenseModel>general-public-license</LicenseModel>
      <LatestRestorableTime>*</LatestRestorableTime>
      <MultiAZ>false</MultiAZ>
      <PendingModifiedValues/>
      <PreferredBackupWindow>05:00-05:30</PreferredBackupWindow>
      <PreferredMaintenanceWindow>Sun:05:30-Sun:06:00</PreferredMaintenanceWindow>
      <MasterUsername>msi</MasterUsername>
    </DBInstance>
  </CreateDBInstanceReadReplicaResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBInstanceReadReplicaResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-readreplica"/>
              <con:entry key="Action" value="CreateDBInstanceReadReplica"/>
              <con:entry key="DBInstanceClass" value="db.m1.large"/>
              <con:entry key="SourceDBInstanceIdentifier" value="testmsi-rdsinstance"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check source instance availability" disabled="true">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check source instance availability" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Source instance has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content/>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 7 minutes for creation of read replica (port 3306)">
        <con:settings/>
        <con:config>
          <delay>420000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check source instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check source instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica identifier is attached to source instance">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//data(ns1:ReadReplicaDBInstanceIdentifier)</path>
                <content>testmsi-readreplica</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Source instance has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check read replica">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check read replica" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica identifier is attached to source instance">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//data(ns1:ReadReplicaSourceDBInstanceIdentifier)</path>
                <content>testmsi-rdsinstance</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-readreplica" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete read replica (port 3306)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete read replica (port 3306)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBinstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Instance status set to &quot;deleting&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>deleting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-readreplica"/>
              <con:entry key="SkipFinalSnapshot" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 1 minute for deletion of read replica">
        <con:settings/>
        <con:config>
          <delay>60000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe source instance to check read replica reference has been removed">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe source instance to check read replica reference has been removed" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="testmsi-readreplica should no longer have an entry in source instance">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//data(ns1:ReadReplicaSourceDBInstanceIdentifier)</path>
                <content/>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Source instance has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create DB INstance Read Replica using non-default port" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="CreateDBInstanceReadReplica (non-default port 3000)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstanceReadReplica" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CreateDBInstanceReadReplica (non-default port 3000)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBInstanceReadReplicaResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBInstanceReadReplicaResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:CreateDBInstanceReadReplicaResponse</path>
                <content><![CDATA[<CreateDBInstanceReadReplicaResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <CreateDBInstanceReadReplicaResult>
    <DBInstance>
      <AllocatedStorage>7</AllocatedStorage>
      <AutoMinorVersionUpgrade>false</AutoMinorVersionUpgrade>
      <AvailabilityZone>msicluster2</AvailabilityZone>
      <BackupRetentionPeriod>1</BackupRetentionPeriod>
      <DBInstanceClass>db.m1.large</DBInstanceClass>
      <DBInstanceIdentifier>testmsi-readreplica</DBInstanceIdentifier>
      <DBInstanceStatus>creating</DBInstanceStatus>
      <DBParameterGroups>
        <DBParameterGroup>
          <DBParameterGroupName>testmsi-paramgroup</DBParameterGroupName>
          <ParameterApplyStatus>in-sync</ParameterApplyStatus>
        </DBParameterGroup>
      </DBParameterGroups>
      <DBSecurityGroups>
        <DBSecurityGroup>
          <Status>active</Status>
          <DBSecurityGroupName>testmsi-securitygroup</DBSecurityGroupName>
        </DBSecurityGroup>
      </DBSecurityGroups>
      <Engine>mysql</Engine>
      <EngineVersion>5.5.20</EngineVersion>
      <InstanceCreateTime>*</InstanceCreateTime>
      <LicenseModel>general-public-license</LicenseModel>
      <LatestRestorableTime>*</LatestRestorableTime>
      <MultiAZ>false</MultiAZ>
      <PendingModifiedValues/>
      <PreferredBackupWindow>05:00-05:30</PreferredBackupWindow>
      <PreferredMaintenanceWindow>Sun:05:30-Sun:06:00</PreferredMaintenanceWindow>
      <MasterUsername>msi</MasterUsername>
    </DBInstance>
  </CreateDBInstanceReadReplicaResult>
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</CreateDBInstanceReadReplicaResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Port" value="3000"/>
              <con:entry key="Action" value="CreateDBInstanceReadReplica"/>
              <con:entry key="DBInstanceIdentifier" value="testmsi-readreplica"/>
              <con:entry key="SourceDBInstanceIdentifier" value="testmsi-rdsinstance"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 7 minutes for creation of read replica (port 3000)">
        <con:settings/>
        <con:config>
          <delay>420000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check source instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check source instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica identifier is attached to source instance">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//data(ns1:ReadReplicaDBInstanceIdentifier)</path>
                <content>testmsi-readreplica</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Source instance has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check read replica">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check read replica" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica identifier is attached to source instance">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//data(ns1:ReadReplicaSourceDBInstanceIdentifier)</path>
                <content>testmsi-rdsinstance</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-readreplica" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete read replica (port 3000)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete read replica (port 3000)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBinstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Instance status set to &quot;deleting&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>deleting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-readreplica"/>
              <con:entry key="SkipFinalSnapshot" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 1 minute to delete read replica (port 3000)">
        <con:settings/>
        <con:config>
          <delay>60000</delay>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete main Instance" searchProperties="true" id="8b84982b-4462-4197-96bc-d5dd9c0fa215">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete Instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Instance status is set to deleting">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-rdsinstance"/>
              <con:entry key="SkipFinalSnapshot" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="Ensure all resources have been cleared, address has been released">
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Allow 1 minute to delete">
        <con:settings/>
        <con:config>
          <delay>60000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to ensure instance is gone">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to ensure instance is gone" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is ErrorResponse">
              <con:configuration>
                <path>exists(ErrorResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Cannot find instance with name testmsi-rdsinstance">
              <con:configuration>
                <path>ErrorResponse/Error/Code</path>
                <content>DBInstanceNotFound</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check Delete DB instance event was added" searchProperties="true" id="655bdc7d-9c78-4bbe-8392-3a17bfef5532">
      <con:settings/>
      <con:testStep type="restrequest" name="Describe events">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeEvents" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe events" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeEventsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeEventsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Shutdown event present">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:Event
where $x/data(ns1:Message) = "Database instance shutdown"
return "Shutdown message found."
}
&lt;/Result></path>
                <content>&lt;Result>Shutdown message found.&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Instance deletion event present">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:Event
where $x/data(ns1:Message) = "Database instance deleted"
return "Deletion message found."
}
&lt;/Result></path>
                <content>&lt;Result>Deletion message found.&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="SourceIdentifier" value="testmsi-rdsinstance"/>
              <con:entry key="SourceType" value="db-instance"/>
              <con:entry key="Duration" value="2"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create DB Instance Read Replica with default port where source instance uses non-default" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Create DB Instance 'testmsi-rdsinstance' with non-default port 2500">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create DB Instance 'testmsi-rdsinstance' with non-default port 2500" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is CreateDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:CreateDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="CreateDBInstance response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:CreateDBInstanceResult</path>
                <content><![CDATA[<CreateDBInstanceResult xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <DBInstance>
    <AllocatedStorage>5</AllocatedStorage>
    <AutoMinorVersionUpgrade>false</AutoMinorVersionUpgrade>
    <AvailabilityZone>essex-nova</AvailabilityZone>
    <BackupRetentionPeriod>1</BackupRetentionPeriod>
    <DBInstanceClass>db.m1.small</DBInstanceClass>
    <DBInstanceIdentifier>asaenz-rdsinstance</DBInstanceIdentifier>
    <DBInstanceStatus>creating</DBInstanceStatus>
    <DBParameterGroups>
      <DBParameterGroup>
        <DBParameterGroupName>asaenz-paramgroup</DBParameterGroupName>
        <ParameterApplyStatus>in-sync</ParameterApplyStatus>
      </DBParameterGroup>
    </DBParameterGroups>
    <DBSecurityGroups>
      <DBSecurityGroup>
        <Status>active</Status>
        <DBSecurityGroupName>asaenz-securitygroup</DBSecurityGroupName>
      </DBSecurityGroup>
    </DBSecurityGroups>
    <Engine>MySQL</Engine>
    <EngineVersion>5.5.20</EngineVersion>
    <InstanceCreateTime>*</InstanceCreateTime>
    <LicenseModel>general-public-license</LicenseModel>
    <LatestRestorableTime>*</LatestRestorableTime>
    <MultiAZ>false</MultiAZ>
    <PendingModifiedValues/>
    <PreferredBackupWindow>05:00-05:30</PreferredBackupWindow>
    <PreferredMaintenanceWindow>Sun:05:30-Sun:06:00</PreferredMaintenanceWindow>
    <MasterUsername>msi</MasterUsername>
  </DBInstance>
</CreateDBInstanceResult>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-rdsinstance"/>
              <con:entry key="DBInstanceClass" value="db.m1.small"/>
              <con:entry key="AllocatedStorage" value="5"/>
              <con:entry key="Expires" value="${#Project#Timestamp}"/>
              <con:entry key="DBSecurityGroups.member.1" value="testmsi-securitygroup"/>
              <con:entry key="AutoMinorVersionUpgrade" value="false"/>
              <con:entry key="AvailabilityZone" value="msicluster2"/>
              <con:entry key="DBParameterGroupName" value="testmsi-paramgroup"/>
              <con:entry key="Engine" value="MySQL"/>
              <con:entry key="MasterUserPassword" value="transcend"/>
              <con:entry key="MasterUsername" value="transcend"/>
              <con:entry key="MultiAZ" value="false"/>
              <con:entry key="LicenceModel" value="general-public-license"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 10 minutes for creation of source instance">
        <con:settings/>
        <con:config>
          <delay>600000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="CreateDBInstanceReadReplica (non-default port 2500, should inherit from source)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstanceReadReplica" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CreateDBInstanceReadReplica (non-default port 2500, should inherit from source)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Action" value="CreateDBInstanceReadReplica"/>
              <con:entry key="DBInstanceIdentifier" value="testmsi-readreplica"/>
              <con:entry key="SourceDBInstanceIdentifier" value="testmsi-rdsinstance"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 12 minutes for creation of read replica">
        <con:settings/>
        <con:config>
          <delay>720000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check source instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check source instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica identifier is attached to source instance">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//data(ns1:ReadReplicaDBInstanceIdentifier)</path>
                <content>asaenz-readreplica</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Source instance has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check read replica">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check read replica" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica identifier is attached to source instance">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//data(ns1:ReadReplicaSourceDBInstanceIdentifier)</path>
                <content>asaenz-rdsinstance</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-readreplica" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete read replica">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete read replica" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBinstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Instance status set to &quot;deleting&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>deleting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-readreplica"/>
              <con:entry key="SkipFinalSnapshot" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 1 minute to delete read replica">
        <con:settings/>
        <con:config>
          <delay>60000</delay>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create DB Instance Read Replica with non-default port where source instance uses different non-default" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="CreateDBInstanceReadReplica (non-default port 3000)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="CreateDBInstanceReadReplica" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CreateDBInstanceReadReplica (non-default port 3000)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Port" value="3000"/>
              <con:entry key="Action" value="CreateDBInstanceReadReplica"/>
              <con:entry key="DBInstanceIdentifier" value="testmsi-readreplica"/>
              <con:entry key="SourceDBInstanceIdentifier" value="testmsi-rdsinstance"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 12 minutes for creation of read replica (port 3000)">
        <con:settings/>
        <con:config>
          <delay>720000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check source instance">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check source instance" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica identifier is attached to source instance">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//data(ns1:ReadReplicaDBInstanceIdentifier)</path>
                <content>asaenz-readreplica</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Source instance has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-rdsinstance" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instances to check read replica">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instances to check read replica" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBInstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica identifier is attached to source instance">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//data(ns1:ReadReplicaSourceDBInstanceIdentifier)</path>
                <content>asaenz-rdsinstance</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Read replica has become available">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>available</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBInstanceIdentifier" value="testmsi-readreplica" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete read replica">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete read replica" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBinstanceResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Instance status set to &quot;deleting&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
//ns1:DBInstanceStatus</path>
                <content>deleting</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-readreplica"/>
              <con:entry key="SkipFinalSnapshot" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait 1 minute to delete read replica">
        <con:settings/>
        <con:config>
          <delay>60000</delay>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete DB Instance using final snapshot option" searchProperties="true" disabled="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete Instance (skipfinalsnapshot = false)">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBInstance" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Instance (skipfinalsnapshot = false)" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBInstanceResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Instance status is set to deleting">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="DBInstanceIdentifier" value="testmsi-rdsinstance"/>
              <con:entry key="FinalDBSnapshotIdentifier" value="testmsi-finalsnapshot"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Snapshots to check that final snapshot is being created">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSnapshots" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Snapshots to check that final snapshot is being created" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSnapshotsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSnapshotsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Snapshot snapshot status is &quot;creating&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBSnapshot
where $x/data(ns1:DBSnapshotIdentifier) = "asaenz-finalsnapshot"
return $x/data(ns1:Status)
}
&lt;/Result></path>
                <content>&lt;Result>available&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay to allow time for instance deletion, and snapshot creation (6 minutes)">
        <con:settings/>
        <con:config>
          <delay>360000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Snapshots to check for final snapshot">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSnapshots" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Snapshots to check for final snapshot" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSnapshotsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSnapshotsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Snapshot creation passed/status is available for asaenz-finalsnapshot">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBSnapshot
where $x/data(ns1:DBSnapshotIdentifier) = "asaenz-finalsnapshot"
return $x/data(ns1:Status)
}
&lt;/Result></path>
                <content>&lt;Result>available&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe Instance to ensure deletion">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBInstances" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe Instance to ensure deletion" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response has correct container tags">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBInstancesResponse/ns1:DescribeDBInstancesResult/ns1:DBInstances)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="asaenz-rdsinstance does not show up in the database">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:DBInstance
where $x/data(ns1:DBInstanceIdentifier) = "asaenz-rdsinstance"
return "Instance shows up in database"
}
&lt;/Result></path>
                <content>&lt;Result/></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete Snapshot">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSnapshot" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete Snapshot" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSnapshotIdentifier" value="testmsi-finalsnapshot" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authorize/revoke ingress after deletion of attached instance" searchProperties="true" id="b58b1eee-7396-417d-9b91-d1f680503d35">
      <con:settings/>
      <con:testStep type="restrequest" name="Authorize ingress 1.1.1.1/32">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="AuthorizeDBSecurityGroupIngress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authorize ingress 1.1.1.1/32" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is AuthorizeDBSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:AuthorizeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="IPRange has been added">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where $x/ns1:CIDRIP = "1.1.1.1/32"
return $x
}
&lt;/Result></path>
                <content><![CDATA[<Result>
  <IPRange xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
    <CIDRIP>1.1.1.1/32</CIDRIP>
    <Status>authorized</Status>
  </IPRange>
</Result>]]></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="CIDRIP" value="1.1.1.1/32"/>
              <con:entry key="DBSecurityGroupName" value="testmsi-securitygroup"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Revoke ingress 1.1.1.1/32">
        <con:settings/>
        <con:config service="TopStack RDS" methodName="RevokeDBSecurityGroupIngress" resourcePath="/RDSQuery/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Revoke ingress 1.1.1.1/32" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is RevokeDBSecurityGroupIngressResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:RevokeDBSecurityGroupIngressResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that status of 1.1.1.1/32 is &quot;revoking&quot;">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where $x/ns1:CIDRIP = "1.1.1.1/32"
return $x/ns1:Status = "revoking"
}
&lt;/Result></path>
                <content>&lt;Result>true&lt;/Result></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Action" value="RevokeDBSecurityGroupIngress"/>
              <con:entry key="CIDRIP" value="1.1.1.1/32"/>
              <con:entry key="SignatureMethod" value="${#Project#SignatureMethod}"/>
              <con:entry key="DBSecurityGroupName" value="testmsi-securitygroup"/>
              <con:entry key="AWSAccessKeyId" value="${#Project#AWSAccessKeyId}"/>
              <con:entry key="Version" value="${#Project#Version}"/>
              <con:entry key="SignatureVersion" value="${#Project#SignatureVersion}"/>
              <con:entry key="Timestamp" value="${#Project#Timestamp}"/>
              <con:entry key="Signature" value="${#Project#Signature}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Describe to check group's ingresses">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DescribeDBSecurityGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Describe to check group's ingresses" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DescribeDBSecurityGroupsResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DescribeDBSecurityGroupsResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XQuery Match" name="Check that 172.5.255.1/32 is no longer in security group's IP Ranges">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
&lt;Result>
{
for $x in //ns1:IPRange
where$x//ns1:CIDRIP = "1.1.1.1/32"
return "1.1.1.1/32 is still authorized"
}
&lt;/Result></path>
                <content>&lt;Result/></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="testmsi-securitygroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete security group after deletion of instance" searchProperties="true" id="f3ab5e89-c7e7-40d3-9bce-ddaa0eaf3aae">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete 'testmsi-securitygroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBSecurityGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete 'testmsi-securitygroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding/>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Response type is DeleteDBSecurityGroupResponse">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBSecurityGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Response has correct data/format">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBSecurityGroupResponse</path>
                <content><![CDATA[<DeleteDBSecurityGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBSecurityGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBSecurityGroupName" value="testmsi-securitygroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete parameter group after deletion of instance" searchProperties="true" id="ac6eb1aa-2900-4c64-969c-9c1c945cdf1e">
      <con:settings/>
      <con:testStep type="restrequest" name="Delete 'testmsi-paramgroup'">
        <con:settings/>
        <con:config service="TopStack RDS" resourcePath="/RDSQuery/" methodName="DeleteDBParameterGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete 'testmsi-paramgroup'" mediaType="application/xml" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#ServiceEndpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="XPath Match" name="Correct response type">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
exists(ns1:DeleteDBParameterGroupResponse)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns1='http://rds.amazonaws.com/admin/2011-04-01/';
ns1:DeleteDBParameterGroupResponse</path>
                <content><![CDATA[<DeleteDBParameterGroupResponse xmlns="http://rds.amazonaws.com/admin/2011-04-01/">
  <ResponseMetadata>
    <RequestId>*</RequestId>
  </ResponseMetadata>
</DeleteDBParameterGroupResponse>]]></content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="DBParameterGroupName" value="testmsi-paramgroup" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:properties>
    <con:property>
      <con:name>ServiceEndpoint</con:name>
      <con:value>http://172.31.255.5:8080</con:value>
    </con:property>
    <con:property>
      <con:name>AvailabilityZone</con:name>
      <con:value>nova</con:value>
    </con:property>
    <con:property>
      <con:name>AWSAccessKeyId</con:name>
      <con:value>asaenz</con:value>
    </con:property>
    <con:property>
      <con:name>Version</con:name>
      <con:value>2011-12-19</con:value>
    </con:property>
    <con:property>
      <con:name>SignatureMethod</con:name>
      <con:value>HmacSHA256</con:value>
    </con:property>
    <con:property>
      <con:name>Timestamp</con:name>
      <con:value>2012-08-16T22:52:43PST</con:value>
    </con:property>
    <con:property>
      <con:name>SignatureVersion</con:name>
      <con:value>2</con:value>
    </con:property>
    <con:property>
      <con:name>Signature</con:name>
      <con:value>djfiwjefjeEXAMPLE</con:value>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:sensitiveInformation/>
</con:soapui-project>
